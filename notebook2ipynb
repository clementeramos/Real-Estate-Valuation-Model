{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Initialize Otter\n",
    "import otter\n",
    "grader = otter.Notebook(\"projA2.ipynb\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-e0f9b2de18190d9d",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "source": [
    "# Project A2: Predicting Housing Prices in Cook County\n",
    "\n",
    "## Due Date: Thursday, March 21st, 11:59 PM\n",
    "\n",
    "You must submit this assignment to Gradescope by the on-time deadline, Thursday, March 21st, 11:59 PM. Please read the syllabus for the grace period policy. No late submissions beyond the grace period will be accepted. **We strongly encourage you to plan to submit your work to Gradescope several hours before the stated deadline.** This way, you will have ample time to reach out to staff for submission support. While course staff is happy to help you if you encounter difficulties with submission, we may not be able to respond to last-minute requests for assistance (TAs need to sleep, after all!).\n",
    "\n",
    "Please read the instructions carefully when submitting your work to Gradescope. \n",
    "\n",
    "## Collaboration Policy\n",
    "\n",
    "Data science is a collaborative activity. While you may talk with others about the project, we ask that you **write your solutions individually**. If you do discuss the assignments with others, please **include their names** in the collaborators cell below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Collaborators:** *list names here*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "<hr style=\"border: 5px solid #003262;\" />\n",
    "<br/><br/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "\n",
    "In Project A1, you performed some basic Exploratory Data Analysis (EDA), laying out the thought process that leads to certain modeling decisions. Then, you added a few new features to the dataset and cleaned the data in the process.\n",
    "\n",
    "In this project, you will specify and fit a linear model to a few features of the housing data to predict house prices. Next, we will analyze the error of the model and brainstorm ways to improve the model's performance. Finally, we'll delve deeper into the implications of predictive modeling within the Cook County Assessor's Office (CCAO) case study, especially because statistical modeling is how the CCAO valuates properties. Given the history of racial discrimination in housing policy and property taxation in Cook County, consider the impacts of your modeling results as you work through this project, and think about what fairness might mean to property owners in Cook County.\n",
    "\n",
    "After this part of the project, you should be comfortable with:\n",
    "- Implementing a data processing pipeline using `pandas`.\n",
    "- Using `scikit-learn` to build and fit linear models.\n",
    "\n",
    "## Score Breakdown\n",
    "\n",
    "Question | Manual | Points\n",
    "----|----|----\n",
    "1a | Yes | 1\n",
    "1b | Yes | 1\n",
    "1c | No | 1\n",
    "1d | Yes | 1\n",
    "1e | Yes | 1\n",
    "2 | No | 2\n",
    "3a | No | 2\n",
    "3b | No | 3\n",
    "3c | No | 2\n",
    "4a | Yes | 2\n",
    "4b | No | 1\n",
    "5a | No | 0\n",
    "5b | No | 0\n",
    "5c | No | 0\n",
    "5d | No | 3\n",
    "5e | No | 0\n",
    "5f | No | 0\n",
    "5g | No | 0\n",
    "6a | No | 1\n",
    "6b | No | 2\n",
    "6c | Yes | 2\n",
    "7a | Yes | 1\n",
    "7b | Yes | 2\n",
    "Test Prediction | No | 3\n",
    "Total | 8 | 31"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Before You Start\n",
    "\n",
    "For each question in the assignment, please write down your answer in the answer cell(s) right below the question. \n",
    "\n",
    "We understand that it is helpful to have extra cells breaking down the process towards reaching your final answer. If you happen to create new cells below your answer to run code, **NEVER** add cells between a question cell and the answer cell below it. It will cause errors when we run the autograder, and it will sometimes cause a failure to generate the PDF file.\n",
    "\n",
    "**Important note: The local autograder tests will not be comprehensive. You can pass the automated tests in your notebook but still fail tests in the autograder.** Please be sure to check your results carefully.\n",
    "\n",
    "### Debugging Guide\n",
    "If you run into any technical issues, we highly recommend checking out the [Data 100 Debugging Guide](https://ds100.org/debugging-guide/). In this guide, you can find general questions about Jupyter notebooks / Datahub, Gradescope, common `pandas` errors, RegEx, visualizations, and Proj. A1 and A2 common questions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-62cfd21463535cac",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "import pandas as pd\n",
    "from pandas.api.types import CategoricalDtype\n",
    "\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn import linear_model as lm\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "import zipfile\n",
    "import os\n",
    "\n",
    "from ds100_utils import *\n",
    "from feature_func import *\n",
    "\n",
    "# Plot settings\n",
    "plt.rcParams['figure.figsize'] = (12, 9)\n",
    "plt.rcParams['font.size'] = 12"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's load the training, validation, and test data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "with zipfile.ZipFile('cook_county_data.zip') as item:\n",
    "    item.extractall()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This dataset is split into a training set, a validation set, and a test set. Importantly, the test set does not contain values for our target variable, `Sale Price`. In this project, you will train a model on the training and validation sets and then use this model to predict the `Sale Price`s of the test set. In the cell below, we load the training and validation sets into the `DataFrame` `training_val_data` and the test set into the `DataFrame` `test_data`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-e8fea30adc9d489b",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "outputs": [],
   "source": [
    "training_val_data = pd.read_csv(\"cook_county_train_val.csv\", index_col='Unnamed: 0')\n",
    "test_data = pd.read_csv(\"cook_county_contest_test.csv\", index_col='Unnamed: 0')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-9d6d509b6e854e10",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "source": [
    "As a good sanity check, we should at least verify that the shape of the data matches the description."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-c841a2de55691502",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "outputs": [],
   "source": [
    "# 204792 observations and 62 features in training data\n",
    "assert training_val_data.shape == (204792, 62)\n",
    "# 55311 observations and 61 features in test data\n",
    "assert test_data.shape == (55311, 61)\n",
    "# Sale Price is provided in the training/validation data\n",
    "assert 'Sale Price' in training_val_data.columns.values\n",
    "# Sale Price is hidden in the test data\n",
    "assert 'Sale Price' not in test_data.columns.values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-ce9acc2f62c96e59",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "source": [
    "Let's remind ourselves of the data available to us in the Cook County dataset. Remember, a more detailed description of each variable is included in `codebook.txt`, which is in the same directory as this notebook. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-4e60a7a0cda5eecf",
     "locked": true,
     "schema_version": 1,
     "solution": false
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['PIN', 'Property Class', 'Neighborhood Code', 'Land Square Feet',\n",
       "       'Town Code', 'Apartments', 'Wall Material', 'Roof Material',\n",
       "       'Basement', 'Basement Finish', 'Central Heating', 'Other Heating',\n",
       "       'Central Air', 'Fireplaces', 'Attic Type', 'Attic Finish',\n",
       "       'Design Plan', 'Cathedral Ceiling', 'Construction Quality',\n",
       "       'Site Desirability', 'Garage 1 Size', 'Garage 1 Material',\n",
       "       'Garage 1 Attachment', 'Garage 1 Area', 'Garage 2 Size',\n",
       "       'Garage 2 Material', 'Garage 2 Attachment', 'Garage 2 Area',\n",
       "       'Porch', 'Other Improvements', 'Building Square Feet',\n",
       "       'Repair Condition', 'Multi Code', 'Number of Commercial Units',\n",
       "       'Estimate (Land)', 'Estimate (Building)', 'Deed No.', 'Sale Price',\n",
       "       'Longitude', 'Latitude', 'Census Tract',\n",
       "       'Multi Property Indicator', 'Modeling Group', 'Age', 'Use',\n",
       "       \"O'Hare Noise\", 'Floodplain', 'Road Proximity', 'Sale Year',\n",
       "       'Sale Quarter', 'Sale Half-Year', 'Sale Quarter of Year',\n",
       "       'Sale Month of Year', 'Sale Half of Year', 'Most Recent Sale',\n",
       "       'Age Decade', 'Pure Market Filter', 'Garage Indicator',\n",
       "       'Neigborhood Code (mapping)', 'Town and Neighborhood',\n",
       "       'Description', 'Lot Size'], dtype=object)"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_val_data.columns.values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br/>\n",
    "<hr style=\"border: 5px solid #003262;\" />\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Question 1: Human Context and Ethics\n",
    "\n",
    "In this part of the project, we will explore the human context of our housing dataset. **You should watch [Lecture 15](https://ds100.org/sp24/lecture/lec15/) before attempting this question.**\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "### Question 1a\n",
    "\"How much is a house worth?\" Who might be interested in an answer to this question? **Please list at least three different parties (people or organizations) and state whether each one has an interest in seeing the housing price be low or high.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Buyers, sellers, and homeowners in the housing market are each affected by the pricing of homes. For a buyer, they might be interested in a sale price that is on the lower end, and a seller might be interested in selling their home if they know that it is valuated at a higher price than what they bought in for. Additionally, a homeowner might be concerned if their valuation goes up. As a result their tax rates may increase -- if they live in a state that proportions property taxes on the basis of a home's price."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "### Question 1b\n",
    "\n",
    "Which of the following scenarios strike you as unfair, and why? You can choose more than one. There is no single right answer, but you must explain your reasoning. Would you consider some of these scenarios more (or less) fair than others? Why?\n",
    "\n",
    "A. A homeowner whose home is assessed at a higher price than it would sell for.  \n",
    "B. A homeowner whose home is assessed at a lower price than it would sell for.  \n",
    "C. An assessment process that systematically overvalues inexpensive properties and undervalues expensive properties.  \n",
    "D. An assessment process that systematically undervalues inexpensive properties and overvalues expensive properties."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From an objective point of view, any of these scenarios are not necessarily \"fair\". If I had to choose, I would say scenario A and C leave a greater moral crumple zone, as middle-class families are priced out, while wealthier individuals who may already have multiple properties, as well as larger corporations are more likely to buy in, keeping the cycle of poverty going for low-income and middle-class people. Similarly, it seems more unjust to have a system that is regressive. From the human contexts and ethics lecture, we know that wealthier counties are more likely on average to appeal their valuation if it is unfavorable to them. This can be attributed to the lack of resources available to less affluent communities. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "### Question 1c\n",
    "\n",
    "Consider a model that is fit to $n = 50$ training observations. We denote the response as $y$ (Log Sale Price), the prediction as $\\hat{y}$, and the corresponding residual to be $y - \\hat{y}$. Which residual plot corresponds to a model that might make property assessments that result in regressive taxation? Recall from Lecture 15 that regressive taxation overvalues inexpensive properties and undervalues expensive properties. Assume that all three plots use the same vertical scale and that the horizontal line marks $y - \\hat{y} = 0$. Assign `q1c` to the string letter corresponding to your plot choice.\n",
    "\n",
    "**Hint:** When a model overvalues a property (predicts a `Sale Price` greater than the actual `Sale Price`), what are the relative sizes of $y$ and $\\hat{y}$? What about when a model undervalues a property?\n",
    "\n",
    "<img src='images/res_plots.png' width=\"900px\" />"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "q1c = 'A'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>q1c</pre></strong> passed! 🙌</p>"
      ],
      "text/plain": [
       "q1c results: All test cases passed!"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q1c\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The CCAO Dataset\n",
    "\n",
    "You'll work with the dataset from the Cook County Assessor's Office (CCAO) in Illinois. This government institution determines property taxes across most of Chicago's metropolitan areas and nearby suburbs. In the United States, all property owners must pay property taxes, which are then used to fund public services, including education, road maintenance, and sanitation. These property tax assessments are based on property values estimated using statistical models considering multiple factors, such as real estate value and construction cost.\n",
    "\n",
    "However, this system is not without flaws. In late 2017, a lawsuit was filed against the office of Cook County Assessor Joseph Berrios for producing \"[racially discriminatory assessments and taxes](https://www.chicagotribune.com/politics/ct-cook-county-board-assessor-berrios-met-20170718-story.html).\" The lawsuit included claims that the assessor's office undervalued high-priced homes and overvalued low-priced homes, creating a visible divide along racial lines. Wealthy homeowners, who were typically white, [paid less in property taxes](https://fix8media-chicago.squarespace.com/bpnc-v-berrios-resource-page), whereas [working-class, non-white homeowners paid more](https://www.chicagotribune.com/news/breaking/ct-cook-county-assessor-berrios-sued-met-20171214-story.html).\n",
    "\n",
    "The Chicago Tribune's four-part series, \"[The Tax Divide](https://www.chicagotribune.com/investigations/ct-tax-divide-investigation-20180425-storygallery.html),\" delves into how this was uncovered. After \"compiling and analyzing more than 100 million property tax records from the years 2003 through 2015, along with thousands of pages of documents, then vetting the findings with top experts in the field,\" they discovered that \"residential assessments had been so far off the mark for so many years.\" You can read more about their investigation [here](https://apps.chicagotribune.com/news/watchdog/cook-county-property-tax-divide/assessments.html).\n",
    "\n",
    "Make sure to watch [Lecture 15](https://ds100.org/sp24/lecture/lec15/) before answering the following questions!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "### Question 1d\n",
    "\n",
    "What were the central problems with the earlier property tax system in Cook County as reported by the Chicago Tribune? What were the primary causes of these problems? \n",
    "\n",
    "**Note:** Along with reading the paragraph above, you will need to watch [Lecture 15](https://ds100.org/sp24/lecture/lec15/) to answer this question."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Properties were being assessed inaccurately as the prices had high variance, which is evident when analyzing metrics of error such as the coefficient of dispersion. This showed that the data were clustered in a specific pattern. It was evident that lower-income families' houses were overvalued; thus, their tax rates were disproportionately higher than those of wealthier households, since homes owned by lower-income households were being overvalued."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "### Question 1e\n",
    "\n",
    "In addition to being regressive, how did the property tax system in Cook County place a disproportionate tax burden on non-white property owners?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Given Cook County's history with racial segregation including the housing sector, higher tax rates and overvaluations correspond to non-white, minority groups. To address disparities the assessor's office added a human element to its system via its boards of appeal. Yet this board was part of the problem because the work it did did not address disparities across neighborhoods in Cook County. Minority households in low-income neighborhoods often do not have the time to contest the price of their home. Affluent, white neighborhoods are able to afford more resources such as a tax lawyer, which explains how they have a much higher rate of apppeal to have their valuations lowered."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Question 2: Preparing Data\n",
    "\n",
    "\n",
    "Let's split the dataset into a training set and a validation set. We will use the training set to fit our model's parameters and the validation set to evaluate how well our model will perform on unseen data drawn from the same distribution. If we used all the data to fit our model, we would not have a way to estimate model performance on **unseen data** such as the test set in `cook_county_contest_test.csv`.\n",
    "\n",
    "In the cell below, complete the function `train_val_split` that splits `data` into two smaller `DataFrame`s named `train` and `validation`. Let `train` contain 80% of the data, and let `validation` contain the remaining 20%. **You should not import any additional libraries for this question.** \n",
    "\n",
    "You should only use `NumPy` functions to generate randomness! Your answer should use the variable `shuffled_indices` defined for you. Take a look at the [documentation](https://numpy.org/doc/stable/reference/random/generated/numpy.random.permutation.html) for `np.permutation` to better understand what `shuffled_indices` contains.\n",
    "\n",
    "**Hint:** While there are multiple solutions, one way is to create two `NumPy` arrays named `train_indices` and `validation_indices` (or any variable names of your choice) that contain a *random* 80% and 20% of the indices, respectively. Then, use these arrays to index into `data` to create your final `train` and `validation` `DataFrame`s. To ensure that your code matches the solution, use the first 80% as the training set and the last 20% as the validation set. Remember, the values you use to partition `data` must be integers!\n",
    "\n",
    "*The provided tests check that you not only answered correctly but ended up with the same train/validation split as our reference implementation. Testing later on is easier this way.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This makes the train-validation split in this section reproducible across different runs \n",
    "# of the notebook. You do not need this line to run train_val_split in general.\n",
    "\n",
    "# DO NOT CHANGE THIS LINE\n",
    "np.random.seed(1337)\n",
    "# DO NOT CHANGE THIS LINE\n",
    "\n",
    "def train_val_split(data):\n",
    "    \"\"\" \n",
    "    Takes in a DataFrame `data` and randomly splits it into two smaller DataFrames \n",
    "    named `train` and `validation` with 80% and 20% of the data, respectively. \n",
    "    \"\"\"\n",
    "    \n",
    "    data_len = data.shape[0]\n",
    "    shuffled_indices = np.random.permutation(data_len)\n",
    "    split_index = int(0.8* data_len)\n",
    "    \n",
    "    train_indices = shuffled_indices[:split_index]\n",
    "    validation_indices = shuffled_indices[split_index:]\n",
    "\n",
    "    train = data.iloc[train_indices]\n",
    "    validation = data.iloc[validation_indices]\n",
    "\n",
    "    \n",
    "   \n",
    "    return train, validation\n",
    "train, validation = train_val_split(training_val_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>q2</pre></strong> passed! 🙌</p>"
      ],
      "text/plain": [
       "q2 results: All test cases passed!"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q2\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Question 3: Fitting a Simple Model\n",
    "\n",
    "Let's fit our linear regression model using the ordinary least squares estimator! We will start with something simple by using only two features: the **number of bedrooms** in the household and the **log-transformed total area covered by the building** (in square feet). \n",
    "\n",
    "Consider the following expression for our first linear model that contains one of the features:\n",
    "\n",
    "$$\n",
    "\\text{Log Sale Price} = \\theta_0 + \\theta_1 \\cdot (\\text{Bedrooms})\n",
    "$$\n",
    "\n",
    "In parallel, we will also consider a second model that contains both features:\n",
    "\n",
    "$$\n",
    "\\text{Log Sale Price} = \\theta_0 + \\theta_1 \\cdot (\\text{Bedrooms}) + \\theta_2 \\cdot (\\text{Log Building Square Feet})\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "## Question 3a\n",
    "\n",
    "**Without running any calculation or code**, assign `q3a` to be the comparator ('>=', '=', '<=') that fills the blank in the following statement:\n",
    "\n",
    "We quantify the loss on our linear models using MSE (Mean Squared Error). Consider the training loss of the first model and the training loss of the second model. We are guaranteed that:\n",
    "\n",
    "$$\n",
    "\\text{Training Loss of the 1st Model} ~~  \\_\\_\\_\\_ ~~ \\text{Training Loss of the 2nd Model}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "q3a = '>='"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>q3a</pre></strong> passed! 🌈</p>"
      ],
      "text/plain": [
       "q3a results: All test cases passed!"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q3a\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "### Pipeline Function\n",
    "\n",
    "In Project A1, you wrote a few functions that added features to the dataset. Instead of calling them manually one by one each time, it is best practice to encapsulate all of this feature engineering into one \"pipeline\" function. Defining and using a pipeline reduces all the feature engineering to just one function call and ensures that the same transformations are applied to all data.  Below, we combined some functions into a single helper function that outputs `X` and `Y` for the first model above. Try to understand what this function does! \n",
    "\n",
    "**Note 1:** We have automatically imported staff implementations of the functions you wrote in Project A1. These functions are `remove_outliers`, `add_total_bedrooms`, `find_expensive_neighborhoods`, `add_in_expensive_neighborhood`, and `ohe_roof_material`. You are welcome to copy over your own implementations if you would like.\n",
    "\n",
    "**Note 2:** The staff implementation provided for `remove_outliers` is slightly different from what you did in Project A1. Here `remove_outliers` is exclusive for the bounds whereas in Project A1, it was inclusive for the bounds. `remove_outliers` will only output values strictly greater than the lower bound and strictly smaller than the upper bound. Feel free to still use your original implementation of the function; it shouldn't affect your score if it was done correctly but may slightly change your approach to `q5f`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bedrooms</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>130829</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193890</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30507</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91308</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131132</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Bedrooms\n",
       "130829         4\n",
       "193890         2\n",
       "30507          2\n",
       "91308          2\n",
       "131132         3"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "130829    12.994530\n",
       "193890    11.848683\n",
       "30507     11.813030\n",
       "91308     13.060488\n",
       "131132    12.516861\n",
       "Name: Log Sale Price, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from feature_func import *    # Import functions from Project A1\n",
    "\n",
    "###### Copy any function you would like to below ######\n",
    "...\n",
    "#######################################################\n",
    "\n",
    "\n",
    "def feature_engine_simple(data):\n",
    "    # Remove outliers\n",
    "    data = remove_outliers(data, 'Sale Price', lower=499)\n",
    "    # Create Log Sale Price column\n",
    "    data = log_transform(data, 'Sale Price')\n",
    "    # Create Bedroom column\n",
    "    data = add_total_bedrooms(data)\n",
    "    # Select X and Y from the full data\n",
    "    X = data[['Bedrooms']]\n",
    "    Y = data['Log Sale Price']\n",
    "    return X, Y\n",
    "\n",
    "# Reload the data\n",
    "full_data = pd.read_csv(\"cook_county_train.csv\")\n",
    "\n",
    "# Process the data using the pipeline for the first model.\n",
    "np.random.seed(1337)\n",
    "train_m1, valid_m1 = train_val_split(full_data)\n",
    "X_train_m1_simple, Y_train_m1_simple = feature_engine_simple(train_m1)\n",
    "X_valid_m1_simple, Y_valid_m1_simple = feature_engine_simple(valid_m1)\n",
    "\n",
    "# Take a look at the result\n",
    "display(X_train_m1_simple.head())\n",
    "display(Y_train_m1_simple.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### `.pipe`\n",
    "\n",
    "Alternatively, we can build the pipeline using `pd.DataFrame.pipe` ([documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pipe.html)). Take a look at our use of `pd.DataFrame.pipe` below. \n",
    "\n",
    "The following function `feature_engine_pipe` takes in a `DataFrame` `data`, a list `pipeline_functions` containing 3-element tuples `(function, arguments, keyword_arguments)` that will be called on `data` in the pipeline, and the label `prediction_col` that represents the column of our target variable (`Sale Price` in this case). You can use this function with each of the tuples passed in through `pipeline_functions`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run this cell to define feature_engine_pipe; no further action is needed.\n",
    "def feature_engine_pipe(data, pipeline_functions, prediction_col):\n",
    "    \"\"\"Process the data for a guided model.\"\"\"\n",
    "    for function, arguments, keyword_arguments in pipeline_functions:\n",
    "        if keyword_arguments and (not arguments):\n",
    "            data = data.pipe(function, **keyword_arguments)\n",
    "        elif (not keyword_arguments) and (arguments):\n",
    "            data = data.pipe(function, *arguments)\n",
    "        else:\n",
    "            data = data.pipe(function)\n",
    "    X = data.drop(columns=[prediction_col])\n",
    "    Y = data.loc[:, prediction_col]\n",
    "    return X, Y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "## Question 3b\n",
    "\n",
    "It is time to prepare the training and validation data for the two models we proposed above. Use the following two cells to reload a fresh dataset from scratch and run them through the following preprocessing steps using `feature_engine_pipe` for each model:\n",
    "\n",
    "- Perform a `train_val_split` on the original dataset, loaded as the `DataFrame` `full_data`. Let 80% of the set be training data, and 20% of the set be validation data. \n",
    "- For both the training and validation set,\n",
    "    1. Remove outliers in `Sale Price` so that we consider households with a price that is greater than 499 dollars (or equivalently, a price that is 500 dollars or greater). \n",
    "    2. Apply log transformations to the `Sale Price` and the `Building Square Feet` columns to create two new columns, `Log Sale Price` and `Log Building Square Feet`.\n",
    "    3. Extract the total number of bedrooms into a new column `Bedrooms` from the `Description` column.\n",
    "    4. Select the columns `Log Sale Price` and `Bedrooms` (and `Log Building Square Feet` if this is the second model). We have implemented the helper function `select_columns` for you.\n",
    "    5. Return the design matrix $\\mathbb{X}$ and the observed vector $\\mathbb{Y}$. Note that $\\mathbb{Y}$ refers to the transformed `Log Sale Price`, not the original `Sale Price`. **Your design matrix and observed vector should be `NumPy` arrays or `pandas` `DataFrame`s**.\n",
    "\n",
    "Assign the final training data and validation data for both models to the following set of variables:\n",
    "\n",
    "- First Model: `X_train_m1`, `Y_train_m1`, `X_valid_m1`, `Y_valid_m1`. This is already implemented for you. \n",
    "- Second Model: `X_train_m2`, `Y_train_m2`, `X_valid_m2`, `Y_valid_m2`. Please implement this in the second cell below. You may use the first model as an example.\n",
    "\n",
    "For an example of how to work with pipelines, we have processed model 1 for you using `m1_pipelines` by passing in the corresponding pipeline functions as a list of tuples in the below cell. Your task is to do the same for model 2 in the cell after —— that is, save your pipeline functions as a list of tuples and assign it to `m2_pipelines` for model 2.\n",
    "\n",
    "As a refresher, the equations model 1 and model 2, respectively, are:\n",
    "$$\n",
    "\\text{Log Sale Price} = \\theta_0 + \\theta_1 \\cdot (\\text{Bedrooms})\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "\\text{Log Sale Price} = \\theta_0 + \\theta_1 \\cdot (\\text{Bedrooms}) + \\theta_2 \\cdot (\\text{Log Building Square Feet})\n",
    "$$\n",
    "\n",
    "**Note**: Do not change the line `np.random.seed(1337)` as it ensures we are partitioning the dataset the same way for both models (otherwise, their performance isn't directly comparable)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bedrooms</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>130829</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193890</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30507</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91308</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131132</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Bedrooms\n",
       "130829         4\n",
       "193890         2\n",
       "30507          2\n",
       "91308          2\n",
       "131132         3"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "130829    12.994530\n",
       "193890    11.848683\n",
       "30507     11.813030\n",
       "91308     13.060488\n",
       "131132    12.516861\n",
       "Name: Log Sale Price, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Reload the data\n",
    "full_data = pd.read_csv(\"cook_county_train.csv\")\n",
    "\n",
    "# Apply feature engineering to the data using the pipeline for the first model\n",
    "np.random.seed(1337)\n",
    "train_m1, valid_m1 = train_val_split(full_data)\n",
    "\n",
    "# Helper function\n",
    "def select_columns(data, *columns):\n",
    "    \"\"\"Select only columns passed as arguments.\"\"\"\n",
    "    return data.loc[:, columns]\n",
    "\n",
    "# Pipelines, a list of tuples\n",
    "m1_pipelines = [\n",
    "    (remove_outliers, None, {\n",
    "        'variable': 'Sale Price',\n",
    "        'lower': 499,\n",
    "    }),\n",
    "    (log_transform, None, {'col': 'Sale Price'}),\n",
    "    (add_total_bedrooms, None, None),\n",
    "    (select_columns, ['Log Sale Price', 'Bedrooms'], None)\n",
    "]\n",
    "\n",
    "X_train_m1, Y_train_m1 = feature_engine_pipe(train_m1, m1_pipelines, 'Log Sale Price')\n",
    "X_valid_m1, Y_valid_m1 = feature_engine_pipe(valid_m1, m1_pipelines, 'Log Sale Price')\n",
    "\n",
    "# Take a look at the result\n",
    "# It should be the same above as the result returned by feature_engine_simple\n",
    "display(X_train_m1.head())\n",
    "display(Y_train_m1.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bedrooms</th>\n",
       "      <th>Log Building Square Feet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>130829</th>\n",
       "      <td>4</td>\n",
       "      <td>7.870166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193890</th>\n",
       "      <td>2</td>\n",
       "      <td>7.002156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30507</th>\n",
       "      <td>2</td>\n",
       "      <td>6.851185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91308</th>\n",
       "      <td>2</td>\n",
       "      <td>7.228388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131132</th>\n",
       "      <td>3</td>\n",
       "      <td>7.990915</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Bedrooms  Log Building Square Feet\n",
       "130829         4                  7.870166\n",
       "193890         2                  7.002156\n",
       "30507          2                  6.851185\n",
       "91308          2                  7.228388\n",
       "131132         3                  7.990915"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "130829    12.994530\n",
       "193890    11.848683\n",
       "30507     11.813030\n",
       "91308     13.060488\n",
       "131132    12.516861\n",
       "Name: Log Sale Price, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# DO NOT CHANGE THIS LINE\n",
    "np.random.seed(1337)\n",
    "# DO NOT CHANGE THIS LINE\n",
    "\n",
    "# Process the data using the pipeline for the second model\n",
    "train_m2, valid_m2 = train_val_split(full_data)\n",
    "\n",
    "m2_pipelines = [\n",
    "    (remove_outliers, None, {\n",
    "        'variable': 'Sale Price',\n",
    "        'lower': 499\n",
    "    }),\n",
    "    (log_transform, None, {'col': 'Sale Price'}),\n",
    "    (log_transform, None, {'col': 'Building Square Feet'}),\n",
    "    (add_total_bedrooms, None, None),\n",
    "    (select_columns, ['Log Sale Price', 'Bedrooms', 'Log Building Square Feet'], None)\n",
    "]\n",
    "\n",
    "X_train_m2, Y_train_m2 = feature_engine_pipe(train_m2, m2_pipelines, 'Log Sale Price')\n",
    "X_valid_m2, Y_valid_m2 = feature_engine_pipe(valid_m2, m2_pipelines, 'Log Sale Price')\n",
    "\n",
    "\n",
    "# Take a look at the result\n",
    "display(X_train_m2.head())\n",
    "display(Y_train_m2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>q3b</pre></strong> passed! 🌈</p>"
      ],
      "text/plain": [
       "q3b results: All test cases passed!"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q3b\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "## Question 3c\n",
    "\n",
    "Finally, let's do some regression!\n",
    "\n",
    "We first initialize a `sklearn.linear_model.LinearRegression` object [(documentation)](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html) for both of our models. We set the `fit_intercept = True` to ensure that the linear model has a non-zero intercept (i.e., a bias term)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "linear_model_m1 = lm.LinearRegression(fit_intercept=True)\n",
    "linear_model_m2 = lm.LinearRegression(fit_intercept=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "Now it's time to fit our linear regression model. Use the cell below to fit both models and then use it to compute the fitted values of `Log Sale Price` over the training data and the predicted values of `Log Sale Price` for the validation data.\n",
    "\n",
    "Assign the predicted values from both of your models on the training and validation set to the following variables:\n",
    "\n",
    "- First Model: predicted values on **training set**: `Y_fitted_m1`, predicted values on **validation set**: `Y_predicted_m1`\n",
    "- Second Model: predicted values on **training set**: `Y_fitted_m2`, predicted values on **validation set**: `Y_predicted_m2`\n",
    "\n",
    "**Note**: To make sure you understand how to find the predicted value for both the training and validation data set, there won't be any hidden tests for this part."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Fit the 1st model\n",
    "linear_model_m1.fit(X_train_m1, Y_train_m1)\n",
    "# Compute the fitted and predicted values of Log Sale Price for 1st model\n",
    "Y_fitted_m1 = linear_model_m1.predict(X_train_m1)\n",
    "Y_predicted_m1 = linear_model_m1.predict(X_valid_m1)\n",
    "\n",
    "# Fit the 2nd model\n",
    "linear_model_m2.fit(X_train_m2, Y_train_m2)\n",
    "# Compute the fitted and predicted values of Log Sale Price for 2nd model\n",
    "Y_fitted_m2 = linear_model_m2.predict(X_train_m2) \n",
    "Y_predicted_m2 = linear_model_m2.predict(X_valid_m2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>q3c</pre></strong> passed! 🎉</p>"
      ],
      "text/plain": [
       "q3c results: All test cases passed!"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q3c\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Question 4: Evaluate Our Simple Model\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "Let's now move into the analysis of our two models!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "def rmse(predicted, actual):\n",
    "    \"\"\"\n",
    "    Calculates RMSE from actual and predicted values.\n",
    "    Input:\n",
    "      predicted (1D array): Vector of predicted/fitted values\n",
    "      actual (1D array): Vector of actual values\n",
    "    Output:\n",
    "      A float, the RMSE value.\n",
    "    \"\"\"\n",
    "    return np.sqrt(np.mean((actual - predicted)**2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "## Question 4a\n",
    "\n",
    "One way of understanding a model's performance (and appropriateness) is through a plot of the residuals versus the observations.\n",
    "\n",
    "In the cell below, use `plt.scatter` [(documentation)](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.scatter.html) to plot the residuals from predicting `Log Sale Price` using **only the second model** against the original `Log Sale Price` for the **validation data**. With such a large dataset, it is difficult to avoid overplotting entirely. You should also **ensure that the dot size and opacity in the scatter plot are set appropriately** to reduce the impact of overplotting as much as possible."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "nbgrader": {
     "grade": false,
     "grade_id": "cell-4d79f42d60b94fca",
     "locked": true,
     "schema_version": 1,
     "solution": false
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA/MAAAMRCAYAAACgcOYqAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd5xkV3ng/d/NlTp3T87KEkFZIMCCtS0RbBnLBNsYI8CkRbzY7AcwsCCBZez1rhdsL9j7em2MjckvwThJMklaUBihrFEYaXpy5+qufPN5/zhVNR1nukfdM9Mzz/fzGazuqq66t25Vu59znmAopRRCCCGEEEIIIYRYNcyTfQBCCCGEEEIIIYRYGgnmhRBCCCGEEEKIVUaCeSGEEEIIIYQQYpWRYF4IIYQQQgghhFhlJJgXQgghhBBCCCFWGQnmhRBCCCGEEEKIVUaCeSGEEEIIIYQQYpWRYF4IIYQQQgghhFhlJJgXQgghhBBCCCFWGQnmhRBCrAp/93d/h2EY/N3f/d3JPhSxAl7+8pdjGMaM7/3oRz/CMAxuueWWk3NQS7Tajvd0deONN2IYBnv37j3ZhyKEECtKgnkhhFgBhmHMCUxm27Zt22n9B2crsJn+z3VdNm3axBve8Abuu+++k32IZ5xWwDz9X0dHB5dddhl//Md/jO/7J/sQl918iwSnitZn5OUvf/mC99m7dy+GYbBt27YTdlwn2i233DLnfZnNZjnvvPO46aabOHz48Mk+RCGEOCXZJ/sAhBBCnN62bt3KjTfeCECtVuOee+7hG9/4Bt/61rf41re+xfXXX7+ox/nVX/1VXvSiF7F+/foVPNozw1ve8ha2bduGUoqDBw/yrW99i4985CP80z/9E3feeSe2fWr8eXDllVfyxBNP0N/ff7IPRZwA11xzTXthY3x8nNtvv53Pfe5zfP3rX+fee+9l+/bti3qcP/qjP+L3f//32bhx4woerRBCnHynxv+3FkIIcdratm3bnLTjm2++mU996lP83u/93qKD+a6uLrq6ulbgCM88N95444zd4FtvvZVLLrmEu+++m6985Su8+c1vPnkHN00ul+P8888/2YchTpCXv/zlM35XRFHEq171Kr7//e9z66238jd/8zeLepz169fLop8Q4owgafZCCHEKuuOOO7juuuvo7e0lk8lwzjnn8OEPf5ipqak5922lEUdRxKc+9SnOOussMpkM5513Hn/913/dvt/nPvc5nve855HNZtm0aRO33HILaZrO+/z33nsvr3vd61i3bh2u67J582be9a53LVu663vf+14A9uzZw/j4+IzzCIKAT3ziE5xzzjm4rtve1T9azfzBgwf5f/6f/4dzzjmHTCZDb28vV155JX/wB38w731vuukmduzYged59PX1cf3117Nz58459y2VSnzyk5/koosuoqOjg0KhwLZt23j961/Pz372s2Oe5/nnn4/ruu1znO3WW2/FMAw+97nPtb/34IMP8sY3vpGtW7e2j+8FL3gB73//+4mi6JjPeTzWr1/PDTfcAOhrDzPrv++55x5e9apX0dPTM6c05Ctf+QqveMUr6OnpIZPJcMEFF3DrrbcSBMG8z/XVr36Vyy67jGw2y5o1a3jzm9+84PvqaDXoxWKRj33sYzzvec8jl8vR1dXFC1/4Qn7/93+fWq3WTk//8Y9/DDAjhXt2WvtS3hMAIyMjvP3tb2ft2rVks1kuvvjik9LLIU1TPv/5z3PFFVdQKBTI5/NcfvnlfP7zn5/3s90695GREd72trexdu1a8vk8V199NXfddRcA1WqVD3zgA2zZsgXP87jooov45je/ueAxLPX6L4XjOLzzne8Ejrwvp5/H4cOHeetb38r69euxLKt9DY5WM3/ffffxxje+kY0bN+J5HuvXr+faa6/l61//+pz7LuX34DPPPMPv/M7vtH//9vT0cMEFF/Cud72LiYmJ5/xaCCHEfGRnXgghTjGf//znuemmm8jn87zhDW9gYGCAH/7wh/zJn/wJ//RP/8RPf/pTenp65vzcr//6r3Pvvffy6le/Gsdx+OY3v8k73/lOXNfl/vvv58tf/jK/9Eu/xC/8wi/wve99j09+8pNks1k+/OEPz3icL3zhC7zjHe8gk8lw/fXXs2nTJnbv3s3/+T//h+9973vcc889bNmyZcXO/9d+7de4//77edWrXsVrX/ta1q5de9T733///Vx33XUUi0WuueYabrjhBmq1Grt27eKWW27h4x//ePu+DzzwANdeey3FYpHrrruOG264gfHxcb7zne/w0pe+lG9/+9u8+tWvBkApxStf+UruueceXvziF/OOd7wD27Y5cOAAP/rRj7j77ru57LLLjnpsb3nLW/joRz/KV77yFd73vvfNuf0f/uEfcF2XX//1XwfgoYce4sUvfjGmaXL99dezfft2yuUyzzzzDH/5l3/JH/7hH+I4zlJf0kVRSs37/Z/+9Kd8+tOf5mUvexlvf/vbGR0dxXVdAN7+9rfzt3/7t2zevJlf+7Vfo6uri3vuuYePf/zjfP/73+f222+fcbyf+cxn+MAHPkB3dze//du/TXd3N7fddhtXX331krIuBgcHecUrXsG+ffu47LLLeM973kOapjz11FN85jOf4d3vfjfd3d3cfPPN/N3f/R379u3j5ptvbv/89PrzpbwnACYmJrj66qvZs2cPL33pS3npS1/K0NAQ73nPe/jFX/zFRZ/DcvjN3/xNvva1r7FlyxZ+53d+B8Mw+Pa3v8173/te7rzzTr761a/O+ZmpqSle8pKX0NHRwW/8xm9QLBb56le/ynXXXcdPf/pT3vGOd1AqlfjlX/5loijiq1/9Km94wxv46U9/yote9KIZj7XU6388FnpfTkxM8OIXv5iOjg5e97rXoZRizZo1R32sv/7rv+Y973kPlmVx/fXXc8455zA6OsrOnTv5/Oc/zxve8Ib2fZfye/Dw4cNceeWVVCoVXv3qV/O6170O3/cZHBzkS1/6Eu973/vo6+t7Tq+DEELMSwkhhFh2gALUzTffvOC/rq4uBajBwcH2zw0ODirHcVRnZ6d66qmnZjzmu971LgWo3/md35nx/WuuuUYB6vLLL1eTk5Pt7z/77LPKcRzV1dWltm3bpg4ePNi+bWpqSvX396v+/n4VRVH7+0899ZRyHEedc8456vDhwzOe5/vf/74yTVP9yq/8yqJegx/+8IcKUNdcc82c22655RYFqO3bt885j+c///lqbGxszs984QtfUID6whe+0P5eEARq27ZtClBf/vKX5/zM/v372/8dRZE666yzVCaTUXfdddeM+x06dEht2LBBrV27VjUaDaWUUg8//LAC5j3fJElUsVg81kugDhw4oEzTVJdddtmc2+6++24FqBtuuKH9vd/7vd9TgPr2t7895/7FYlElSXLM5zya1mv8wx/+cMb3h4eH1dq1axWgvvjFLyqljlw/QP3VX/3VnMdqXY/Xve517des5eabb1aA+sxnPtP+3uDgoHJdV/X09Mx4zydJom644Yb2c03XOoabb755xvevvvpqBahPf/rTc45rbGxsxvG0znk+S31PKKXUO97xDgWo3/3d351x/507dyrbtuc93oW0zm/r1q0L/p54//vf377PdP/4j//Y/txXq9X296vVqrr00ksVoL70pS/N+JnWa/yud71rxnvp7//+7xWgurq61C/90i/NON+f/OQnClCvfe1rZzzWUq//0bTuP/t1i6JI/cIv/IIC1Fvf+tY55/HmN795xu+vlre85S1zfrc+/vjjyrZt1dPTox577LE5PzP9d8VSfw/+2Z/92YLnW61WVb1eP8YrIIQQx0eCeSGEWAGtPzYX82/6H5x/8Ad/oAD1sY99bM5jTkxMqEKhoDKZjPJ9v/39VrDy/e9/f87PvOIVr1CA+pu/+Zs5t731rW9VgNq7d2/7e7/7u7+rAPUv//Iv857Xa1/7WmWapiqVSsd8DeYLVD74wQ+qn/u5n1OAMk1Tfetb35pzHvMFskrNH8x/85vfVIC6/vrrj3k83/nOdxSgPvjBD857+2c/+1kFqH/+539WSin1yCOPKED9xm/8xjEf+2hawcjsAOLd7363AtR3v/vd9vc+8IEPKEDddtttz+k5F9J6jd/ylreom2++WX3iE59Qb3/721VPT48C1JVXXqnCMFRKHbl+L3zhC+d9rIsvvlg5jjNjAakljmPV19enLr/88vb3br31VgWoT3ziE3Pu/+yzzyrTNBcVzN9///0KUBdffPGiFjeOFswv9T0RhqHK5XKqo6NDTU1Nzbl/K4hcajC/mH+zg/mf//mfV4C644475jzu7bffrgD1ile8Ysb3AZXL5VS5XJ7x/TiO2wsRzz777JzH2759u9q2bduM7y31+h9NK5i/5ppr2r8rbrrpJnXuuecqQPX39884LkC5rqtGRkbmfbz5gvmbbrpJAep//s//eczjWervwT//8z9XgPrf//t/L+p8hRBiuUiavRBCrCC1QIoo6FTfffv2zfjegw8+CMArXvGKOffv7e3l0ksv5c477+SJJ57g4osvnnH7fCnfGzZsOOZtBw8eZOvWrQDcfffdgK5Vnm903OjoKGmasnv37mOmmLfs27ePT37ykwDYts3AwAA33HAD/+W//BeuvvrqOfe/6qqrFvW4APfccw8Ar3rVq45539a57d27d94a7N27dwPw5JNP8prXvIYLL7yQSy65hK985SscOHCA66+/npe85CVcfvnl7TTzxbjxxhv5j//4D774xS/yJ3/yJwAEQcDX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8ra3vY2f/exnfP7zn+ess87iuuuuY8uWLRSLRQYHB7nzzjt561vfyl/91V8B+r39x3/8x/yX//JfuOSSS3jjG99IV1cXt912G1NTU7zgBS/gkUceWdRzf+lLX+LlL385H/rQh/j617/ONddcg1KK3bt3c/vtt/Pkk0+2Z8n//M//PN/4xje44YYbeNWrXkU2m2Xr1q28+c1vXvJ7AuDTn/403//+9/nsZz/L/fff354z/7WvfY1Xv/rV/NM//dOKvN6z/eZv/ibf/e53+frXv85FF13Ea1/7WgzD4Dvf+Q6Dg4O84Q1v4E1vetOKPf9Sr//JduGFF/L5z3+ed7/73Vx88cXtOfPj4+Ps3LmTrq4ufvjDHwJL/z345S9/mc997nNcc801nH322fT09PDss8/yve99D8/zeP/7338yT10IcTpb7vb4QgghjoymO5qtW7fOGZ/Uctttt6lf/MVfVN3d3cp1XXXWWWepD37wg/OOgTra6K35RjS1tMZBzZ45rpQey/aWt7xFbdmypT0b/KKLLlLvfOc75x2BN5+jzZmfz9HOQ6n5R9O17Nu3T73nPe9R27ZtU47jqN7eXnXllVeqW2+9dc59R0ZG1Ic//GF10UUXqWw2q/L5vDr77LPVr/3ar6l/+Id/aM+tPnDggPrIRz6irr76arV27Vrluq7auHGjeuUrX6n+9V//dVHnNN2ePXuUYRgKUL/0S780731uu+02deONN6oLLrhAdXZ2qlwup84991z1vve9b8YIQaWW/voqtfCc+fksNON9tu9973vqNa95jRoYGFCO46i1a9eqK664Qn3sYx9TTzzxxJz7f/nLX1aXXHKJ8jxP9ff3qze96U3q0KFD817/ox3D+Pi4+tCHPqTOPfdc5Xme6urqUi984QvVRz/6UVWr1dr3i+NYfeQjH1Hbt29vj1+b/Zot9j3RMjQ0pN761req/v5+lclk1Atf+EL1hS98YdGv2ezzO9o1HBwcnHc0nVJKJUmiPve5z6nLLrtMZbNZlc1m1aWXXqr+1//6X/OO7Tvac23dunXe51Dq6J/NpV7/+Sw0Z34hx3rNjvZ776c//am64YYb2se7fv16dd1116lvfOMbc+672N+D99xzj3r3u9+tXvCCF6ienh6VyWTUWWedpW688Ub16KOPLuqchBDieBhKrWB3EiGEEEIIIYQQQiw7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5OToueeeS3KVQGejR49WRkZGzH19Paf1zar6qfnz50uSNm7c2Gn7hg0bJMlysydiYBgyZIj++c9/yufzddq+efNmSdKwYcOSURbQI3a7XXPmzNHTTz+tlpaW6PZPPvlEr776Kssmoc/qCPIVFRXatGmTvvzlLye7JOCIrr76ar366quH/UjS3Llz9eqrr2ry5MlJrhLozG6366KLLtK//vUvVVVVRbebpqnnn39eo0ePVl5eXvIK7AJj5hNoxowZmjNnjpYtW6ZIJKKJEyfqnXfe0V133aXZs2fzxw190k033aS5c+dq+vTpuvnmm5WXl6ctW7ZoxYoVKikpiQ4TAZJp48aN8vv90aC+fft2Pfnkk5KkWbNmKSMjQ3fddZcmTJig2bNna/HixQoEArrjjjuUl5en73//+8ksHwPU0e7bjkc833vvPa1evVqhUEhbtmyJ/n5+fr5Gjx6dlNoxMB3tni0qKlJRUVHM3x06dKjOO++8BFUK/Ft3PiMsX75cGzdu1AUXXKA777xTWVlZWrNmjT744AP96U9/Smb5XTJMplBPqNbWVt11111at26d9uzZoyFDhmjBggVaunSpnE5nsssDYnr11Vd1zz336B//+Ieampo0fPhwzZkzR0uWLIm5BjKQaEVFRdq9e3fMfZWVldEPl++++64WLVqkzZs3y2636/zzz9eqVasIREiKo923kjRq1Kgj/v7ChQv1yCOPxKM0IKbu/q39IsMwdMMNN7BUHZKiu/fttm3btHjxYr3++utqb2/XGWecoR/+8Id9euUQwjwAAAAAABbDmHkAAAAAACyGMA8AAAAAgMUQ5gEAAAAAsBjCPAAAAAAAFkOYBwAAAADAYgjzAAAAAABYDGEeAAAAAACLIcwDAAAAAGAxhHkAAAAAACyGMA8AAAAAgMUQ5gEA6IFHHnlEhmHonXfeSXYpkqSysjJdfPHFGjFihJxOpwoKCnTWWWfp+9///jGdr+P9VVVV9Up9Hefr+LHb7Ro2bJi++c1vqrq6Oik19bZly5appKREkUikR7/30EMPaejQofL7/XGqDADQnxHmAQCwqOeee06TJk1Sc3OzVq5cqU2bNum+++7T2WefrccffzzZ5XXyu9/9Tps3b9aLL76oa665Ro899pjOOeecbgXZCy+8UJs3b9YJJ5yQgEp7pqamRitXrtSyZctks/XsY9XChQvlcrm0cuXKOFUHAOjP7MkuAAAAHJuVK1dq1KhReuGFF2S3//uf9Msvv7zPBcRTTz1V48ePlyRNnTpV4XBYy5cv11/+8hctWLAg5u/s379fGRkZys/PV35+fiLL7bb77rtPgwYN0rx583r8u3a7Xd/+9re1fPlyLVq0SBkZGXGoEADQX9GZBwAgDt544w39x3/8hzIzM5WRkaFJkybpueeeO+y4Z555RuPGjZPT6VRxcbHuu+8+3XnnnTIM46iv0dDQoLy8vE5BvsOhXeKdO3fqm9/8psaMGaOMjAwNHTpUc+bM0Ycfftit9/Lxxx/riiuu0ODBg+V0OnXyySfr17/+dbd+90gmTpwoSdq9e7ckRd/z1q1b9fWvf105OTkaPXq0pNiP2e/YsUPf+MY3VFBQIKfTqREjRuiqq65SMBjsce11dXW69tprNXz4cDmdTuXn5+vss8/WSy+91OV7aGtr00MPPaQrrrii0/WeN2+ehg0bdtjxoVBIZ5xxhqZPnx7dtmDBAjU3N+t///d/u3HVAAD4NzrzAAD0stdee03Tp0/XuHHj9NBDD8npdOr+++/XnDlz9Nhjj+myyy6TJD3//POaN2+epkyZoscff1yhUEirVq3S3r17u/U6Z511ltasWaPvfOc7WrBggc4880w5HI7DjqupqVFubq7uuece5efny+v16tFHH1Vpaanee+89nXTSSUd8je3bt2vSpEkaMWKEfv7zn6uwsFAvvPCCvvOd76i+vl5Lly49pmu0c+dOSTqs4z5v3jxdfvnluu666474CP4HH3ygyZMnKy8vT8uWLdOYMWO0Z88ePfvss2pra5PT6exR7VdeeaW2bt2qu+++W1/60pf0+eefa+vWrWpoaOjyPZSVlamhoUFTp07ttH3KlCn685//rN27d2vkyJHR7ffee6927NihJ554IrqtsLBQY8eO1XPPPaf/+q//6ubVAwBAkgkAALrtd7/7nSnJLC8vP+IxEydONAcPHmy2tLREt4VCIfPUU081hw0bZkYiEdM0TXPChAnm8OHDzWAwGD2upaXFzM3NNbvzT3R9fb05efJkU5IpyXQ4HOakSZPMFStWdHrtLwqFQmZbW5s5ZswY8+abb475/iorK03TNM2ZM2eaw4YNM5uamjodd+ONN5ppaWmm1+vtssaO823ZssVsb283W1pazPXr15v5+flmZmamWVtba5qmaS5dutSUZN5xxx1HPEdHTeeff745aNAgc9++fV2+dndrd7vd5k033dTluWL56U9/akqKvocO7777rinJXLduXXRbRUWFmZGRYS5btuyw8yxYsMAsKCjo8esDAAY2HrMHAKAX+f1+lZWV6etf/7rcbnd0e0pKiq688kp99tln+r//+z/5/X698847mjt3rlJTU6PHud1uzZkzp1uvlZubq7///e8qLy/XPffco4suukgfffSRlixZotNOO0319fWSDjze/ZOf/EQlJSVKTU2V3W5XamqqPv74Y/3rX/864vkDgYBefvllXXzxxcrIyFAoFIr+zJo1S4FAQFu2bOlWrRMnTpTD4VBmZqZmz56twsJCbdy4UQUFBZ2Omz9/fpfn2b9/v1577TVdeumlXY6j70ntX/3qV/XII4/oxz/+sbZs2aL29vZuvaeamhoZhqG8vLxO28844wxlZWXpzTffjG67/vrrNXz4cC1atOiw8wwePFj79u1TKBTq1usCACAxZh4AgF7V2Ngo0zRjzrw+ZMgQSQfGuncc98UwKynmtq6MHz9eixYt0hNPPKGamhrdfPPNqqqqik6C973vfU8/+tGPNHfuXP31r39VWVmZysvLdfrpp6u1tfWI521oaFAoFNIvf/lLORyOTj+zZs2SpOgXBkezdu1alZeX67333lNNTY3+8Y9/6Oyzzz7suKPNWN/Y2KhwOBxzTPqx1v74449r4cKFWrNmjc466yx5PB5dddVVqq2t7fI1Wltb5XA4lJKS0mm7zWbTpEmT9NZbb0mS/vjHP+qFF17Qb37zm05f3HRIS0uTaZoKBAJdvh4AAIdizDwAAL0oJydHNptNe/bsOWxfTU2NJCkvL085OTkyDCPm+PijhciuOBwOLV26VL/4xS+0bds2SdIf/vAHXXXVVfrJT37S6dj6+noNGjSoy/fS8UTBDTfcEPOYUaNGdauuk08+OTqbfVeONvGfx+NRSkqKPvvssy6P60nteXl5Wr16tVavXq1PPvlEzz77rBYvXqx9+/bp+eefP+Jr5OXlqa2tTX6/Xy6Xq9O+KVOm6Ec/+pE++eQTfe9739PChQt13nnnxTyP1+uV0+ns9CQHAABHQ5gHAKAXuVwulZaW6umnn9aqVauUnp4uSYpEIvrDH/6gYcOG6Utf+pIMw9D48eP1l7/8RatWrYp2bH0+n9avX9+t19qzZ0/MTnbHo/MdTwIYhhGdFK7Dc889p+rqap144olHPH9GRoamTp2q9957T+PGjYvZVU609PR0nXvuuXriiSd09913H/aIe4djrX3EiBG68cYb9fLLL3d6TD6WsWPHSpJ27dqlcePGddo3ZcoUhcNhzZ49W+FwWKtWrTrieSoqKlRSUtKt+gAA6ECYBwDgGLzyyiudlkrrMGvWLK1YsULTp0/X1KlTdcsttyg1NVX333+/tm3bpsceeyzafV62bJkuvPBCzZw5U9/97ncVDof1s5/9TG63W16v96g1zJw5U8OGDdOcOXM0duxYRSIRvf/++/r5z38ut9ut7373u5Kk2bNn65FHHtHYsWM1btw4vfvuu/rZz3521EfVpQPrqE+ePFnnnHOOrr/+ehUVFamlpUU7d+7UX//6V73yyis9u3C94N5779XkyZNVWlqqxYsX68QTT9TevXv17LPP6re//a0yMzO7XXtTU5OmTp2qK664QmPHjlVmZqbKy8ujKw10paPTvmXLlsPC/IQJE5Senq4PP/xQDz/88BG/dIhEInr77bf1rW996/gvDABgQCHMAwBwDGJNZCZJlZWVOvfcc/XKK69o6dKluvrqqxWJRHT66afr2Wef1ezZs6PHXnDBBXrqqad0xx136LLLLlNhYaH+53/+RzU1Nfr9739/1Bpuv/12PfPMM/rFL36hPXv2KBgM6oQTTtC0adO0ZMkSnXzyyZIOhFqHw6EVK1bI5/PpzDPP1NNPP63bb7/9qK9RUlKirVu3avny5br99tu1b98+DRo0SGPGjImOPU+0008/XW+//baWLl2qJUuWqKWlRYWFhTr//PM7deC7U3taWppKS0v1+9//XlVVVWpvb9eIESO0aNEi/eAHP+iyjuHDh+ucc87RM888o2uvvbbTPpvNppycHI0fP15XX331Ec/xt7/9TU1NTVqwYMGxXxAAwIBkmKZpJrsIAABwQHt7u8444wwNHTpUmzZtSnY5OIqnnnpKl112mXbv3q2hQ4dGt69atUo//OEP9f7770e/VInlyiuvVEVFxVEf6QcA4IsI8wAAJNG3vvUtTZ8+XSeccIJqa2v1m9/8Rq+99po2bdqkadOmJbs8HIVpmpo0aZK+8pWvaOXKlfrggw9UXl6uW2+9VXfffbduueWWI/7url27dPLJJ+uVV17R5MmTE1g1AKA/IMwDAJBEl156qd566y3V1dXJ4XDozDPP1G233aYLLrgg2aWhm7Zt26Znn31WY8eO1fz581VYWKjrrrtOS5cu7fL3Xn31VX388ceHPaIPAEB3EOYBAAAAALAYW7ILAAAAAAAAPUOYBwAAAADAYgjzAAAAAABYDGEeAAAAAACLIcwDAAAAAGAxhHkAAAAAACyGMA8AAAAAgMUQ5gEAAAAAsBjCPAAAAAAAFkOYBwAAAADAYv4ftAutGr/6StEAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1200x900 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_valid_m2, Y_valid_m2-Y_predicted_m2, s=40, alpha=0.4)\n",
    "plt.ylabel('Residual $(y-\\hat{y})$')\n",
    "plt.xlabel('Log Sale Prices $(y)$')\n",
    "plt.title('Home Prices vs. Predicted Home Prices');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "--- \n",
    "\n",
    "## Question 4b\n",
    "\n",
    "Based on the structure you see in your plot, does this model seem like it will correspond to _regressive_, _fair_, or _progressive_ taxation?\n",
    "\n",
    "Assign \"regressive\", \"fair\" or \"progressive\" to `q4b` in the cell below accordingly.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "q4b = 'regressive'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>q4b</pre></strong> passed! 🌈</p>"
      ],
      "text/plain": [
       "q4b results: All test cases passed!"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q4b\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While our simple model explains some of the variability in price, there is certainly still a lot of room for improvement —— one reason is we have been only utilizing 1 or 2 features (out of a total of 70+) so far! Can you engineer and incorporate more features to improve the model's fairness and accuracy? We won't be asking you to provide your answers here, but this will be important going into the next part of this project."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "# Question 5\n",
    "\n",
    "It is time to build your own model!\n",
    "\n",
    "You will conduct feature engineering on your training data using the `feature_engine_final` function (you will define this in `q5d`), fit the model with this training data, and compute the training Root Mean Squared Error (RMSE). Then, we will process our test data with `feature_engine_final`, use the model to predict `Log Sale Price` for the test data, transform the predicted and original log values back into their original forms (by using `delog`), and compute the test RMSE.\n",
    "\n",
    "Your goal in Question 5 is to:\n",
    "\n",
    "* Define a function to perform feature engineering and produce a design matrix for modeling.\n",
    "* Apply this feature engineering function to the training data and use it to train a model that can predict the `Log Sale Price` of houses.\n",
    "* Use this trained model to predict the `Log Sale Price`s of the test set. Remember that our test set does not contain the true `Sale Price` of each house –— your model is trying to guess them! \n",
    "* Submit your predicted `Log Sale Price`s on the test set to Gradescope.\n",
    "\n",
    "\n",
    "Right under the grading scheme, we will outline some important Datahub logistics. **Please make sure you read this carefully to avoid running into memory issues later!**\n",
    "\n",
    "* In Question 5a, you can explore possible features for your model. This portion is **not graded**.\n",
    "* In Question 5b, you can perform EDA on the dataset. This portion is **not graded**.\n",
    "* In Question 5c, you can define feature engineering helper functions. This portion is **not graded**.\n",
    "* In Question 5d, you will create your design matrix and train a model. This portion is **is graded**.\n",
    "* In Question 5e, you can fit and evaluate your model. This portion is **not graded**.\n",
    "* In Question 5f, you will generate the predictions for the test set. This portion is **is graded**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Grading Scheme\n",
    "\n",
    "Your grade for Question 5 will be based on your model's RMSE when making predictions on the training set, as well as your model’s RMSE when making predictions on the test set. The tables below provide scoring guidelines. If your RMSE lies in a particular range, you will receive the number of points associated with that range.\n",
    "\n",
    "**Important**: while your training RMSE can be checked at any time in this notebook, your test RMSE can only be checked by submitting your model’s predictions to Gradescope. **You will only be able to submit your test set predictions to Gradescope up to 4 times per day**. Attempts will not carry over across days, so we recommend planning ahead to make sure you have enough time to finetune your model! \n",
    "\n",
    "The thresholds are as follows:\n",
    "\n",
    "Points | 3 | 2 | 1 | 0\n",
    "--- | --- | --- | --- | ---\n",
    "Training RMSE | Less than 200k | [200k, 240k) | [240k, 280k) | More than 280k\n",
    "\n",
    "Points | 3 | 2 | 1 | 0\n",
    "--- | --- | --- | --- | ---\n",
    "Test RMSE | Less than 240k | [240k, 280k) | [280k, 300k) | More than 300k"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br><br>\n",
    "\n",
    "---\n",
    "## Some notes before you start\n",
    "\n",
    "- **If you are running into memory issues, restart the kernel and only run the cells you need to.** The cell below (question cell) contains most to all of the imports necessary to successfully complete this portion of the project, so it can be completed independently code-wise from the remainder of the project, and you do not need to rerun the cell at the top of this notebook. The autograder will have more than 4GB of memory, so you will not lose credit as long as your solution to Question 5 is within the total memory (4GB) limits of Datahub. By default, we reset the memory and clear all variables using `%reset -f`. If you want to delete specific variables, you may also use `del` in place of `%reset -f%`. For example, the following code will free up memory from data used for older models: `del training_val_data, test_data, train, validation, X_train_m1, X_valid_m1, X_train_m2, X_valid_m1`. Our staff solution can be run independently from all other questions, so we encourage you to do the same to make debugging easier.\n",
    "- **If you need the data again after deleting the variables or resetting, you must reload them again from earlier in the notebook.**\n",
    "- You will be predicting `Log Sale Price` on the data stored in `cook_county_contest_test.csv`. We will delog/exponentiate your prediction on Gradescope to compute RMSE and use this to score your model. Before submitting to Gradescope, make sure that your predicted values can all be delogged (i.e., if one of your `Log Sale Price` predictions is 60, it is too large; $e^{60}$ is too big!)\n",
    "- You MUST remove any additional new cells you add before submitting to Gradescope to avoid any autograder errors. \n",
    "- **You can only submit your test set prediction CSV file to Gradescope up to 4 times per day. Start early!** In the case that you are approved for an extension, you will be granted 4 more submissions for each day the deadline has been extended.\n",
    "\n",
    "**PLEASE READ THE ABOVE MESSAGE CAREFULLY!**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The 3 lines below to clean up memory from previous questions and reinitialize Otter!\n",
    "# If you want to refer to any functions or variables you defined at any point earlier in the project, \n",
    "# Place them in the cell under Question 5c so that you can access them after the memory is reset.\n",
    "# If you think you will not run into any memory issues, you are free to comment out the next 3 lines as well.\n",
    "\n",
    "#%reset -f                               \n",
    "import otter                            \n",
    "grader = otter.Notebook(\"projA2.ipynb\")\n",
    "\n",
    "#Imports all the necessary libraries again\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from pandas.api.types import CategoricalDtype\n",
    "\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn import linear_model as lm\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "import zipfile\n",
    "import os\n",
    "\n",
    "from ds100_utils import *\n",
    "from feature_func import *\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 5a: Finding Potential Features\n",
    "\n",
    "**This question is not graded** – it is intended to give helpful guidance on how to get started with feature engineering in `q5d`. You may write as little or as much as you would like here; it will not factor into your grade. Read the documentation about the dataset in `codebook.txt`, located in this directory. Is there any data you think may be related to housing prices? Include them below for future reference."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "'Age Decade', 'Garage Indicator', 'Building Square Feet', 'Neighborhood Code', 'Bedrooms'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "tags": []
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 5b: More EDA\n",
    "\n",
    "\n",
    "**This question is not graded** – it is intended to give helpful guidance on how to get started with feature engineering. You may write as little or as much as you would like here; it will not factor into your grade. Use the scratch space below to conduct any additional EDA you would like to see. You may use this space to make additional plots to help you visualize the relationship between any variables or compute any relevant statistics. You are free to add any number of cells as needed below and before the next question. You may find it helpful to review Project A1 and the techniques we explore there.\n",
    "\n",
    "\n",
    "<details>\n",
    "    <summary>[<b>Click to Expand</b>] Some potential ideas. </summary>\n",
    "    \n",
    "* Plot the distribution of a variable. Is this variable heavily skewed? Are there any outliers? This can inform how you engineer your features later on.\n",
    "\n",
    "* Make a scatter plot between a continuous feature and the outcome. Is there a relationship? Is there a transformation that may linearize the relationship?\n",
    "\n",
    "* Make a plot of a categorical/discrete feature and the outcome. Is there a relationship? How can we transform this categorical data into numerical features that can be useful for OLS?\n",
    "\n",
    "* Find the correlation coefficient between features and the outcome. Is there a strong relationship between the two? Can you find the correlation coefficient between different transformations of the feature and the outcome?\n",
    "\n",
    "</details>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Log Land Square Feet', ylabel='Log Sale Price'>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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p2aUsvsCERFRAmGQTkRElMTYfYGIiCixMN2diIiIiIiISCYYpBMRERERERHJBIN0IiIiIiIiIpngnHQiIkpYJqsd9RY7zLZ26DKVMGZx/jURERElNgbpRESUkI43tWLeup3YdqDe81pliRErp49An9zMOI6MiIiIKHpMdyciooRjstoDAnQA2HqgHvPX7YTJao/TyIiIiIg6h0E6ERElnHqLPSBAd9t6oB71FgbpRERElJgYpBMRUcIx29pDvt8c5n0iIiIiuWKQTkRECUenUYZ8PyfM+0RERERyxSCdiIgSjjFbhcoSo+h7lSVGGLNZ4Z2IiIgSE4N0IiJKOHqtCiunjwgI1CtLjHho+gi2YSMiIqKExRZsRESUkPrkZuKpGaWot9jRbGtHjkYJYzb7pBMREVFiY5BOREQJS69lUE5ERETJhenuRERERERERDLBIJ2IiIiIiIhIJhikExEREREREckEg3QiIiIiIiIimWCQTkRERERERCQTDNKJiIiIiIiIZIJBOhEREREREZFMMEgnIiIiIiIikgkG6UREREREREQywSCdiIiIiIiISCYYpBMRERERERHJBIN0IiIiIiIiIplgkE5EREREREQkEwzSiYiIiIiIiGSCQToRERERERGRTDBIJyIiIiIiIpIJBulEREREREREMsEgnYiIiIiIiEgmGKQTERERERERyQSDdCIiIiIiIiKZYJBOREREREREJBMM0omIiIiIiIhkgkE6ERERERERkUwwSCciIiIiIiKSCQbpRERERERERDKREe8BxIMgCAAAs9kc55EQERERERFRKnDHn+54NJiUDNKbm5sBAAUFBXEeCREREREREaWS5uZm6PX6oO8rhHBhfBJyuVw4fvw4cnJyoFAounx/ZrMZBQUFOHbsGHQ6XZfvjyLHayR/vEbyx2skf7xG8sdrJH+8RvLHayR/qXqNBEFAc3Mz+vTpg7S04DPPU/JJelpaGvr169ft+9XpdCn1IUxEvEbyx2skf7xG8sdrJH+8RvLHayR/vEbyl4rXKNQTdDcWjiMiIiIiIiKSCQbpRERERERERDLBIL0bqNVqLFq0CGq1Ot5DoSB4jeSP10j+eI3kj9dI/niN5I/XSP54jeSP1yi0lCwcR0RERERERCRHfJJOREREREREJBMM0omIiIiIiIhkgkE6ERERERERkUwwSO8i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2zfffIMhQ4YEzD13t8fbvXt3PIZFfubNm4f6+nrs2rULhw8fxqefforGxkZkZWXhwgsvjPfwyM/AgQORmZkpWi9g165dKC4uhkajicPIiBJTY2MjLrvsMtTV1eHDDz8M+huQ5CMnJweDBg3Cd999F++hxAWjkG7U2NiId999FyNHjuQ/rjIwffp0AMD777/v8/rGjRsBAGPGjOn2MZG4trY2vPLKK7j44osxbNiweA+HvPTp0wd79uyBxWLxed3df7tfv37xGBaJUKvVGDZsGPr374+jR4/i9ddfx6233orMzMx4D438ZGRkYNq0aXjzzTfR3Nzsef3o0aPYsmULrrvuujiOjiixuAP0Q4cO4V//+pfPdFSSL/eN5eLi4ngPJS44J72L3HjjjSgsLMTo0aNhNBpx4MABPProozhx4gReeOGFeA+PAFx++eWYNm0ali5dCpfLhTFjxmDHjh1YsmQJpk6divLy8ngPkc7YsGEDTp8+zafoMnTXXXfh2muvxeTJk/H73/8eRqMRn3/+OVasWIEhQ4Z4po9Q/OzevRvr1q3D6NGjoVar8e9//xsrV65ESUkJHnzwwXgPLyW9//77aGlp8QTge/fuxT/+8Q8AwJQpU6DVarFkyRJcdNFFmDp1KubPnw+bzYaFCxfCaDTiD3/4QzyHnxKkXKNTp055pvS4sx7ef/999OzZEz179sS4cePiM/gUEu46KRQKXHHFFaipqcHjjz8Oh8OBzz//3LN+z549MXDgwLiMPVWEu0bt7e2YPHkybrzxRpSUlCAzMxPfffcdnnjiCbS1tWHRokXxHH78xLNJezJbsWKFMHLkSEGv1wvp6elCz549haqqKuHLL7+M99DIi9VqFebNmycUFBQIGRkZQmFhoXDfffcJNpst3kMjL5MnTxaysrIEs9kc76GQiM2bNwuXX365cM455wiZmZnCeeedJ/zhD38Q6uvr4z00EgTh22+/FSorK4UePXoIKpVKKC4uFh544AHBYrHEe2gpq3///gIA0f/q6uo8y+3YsUOYNGmSoNVqBZ1OJ1x77bVCbW1t/AaeQqRcoy1btgRdZty4cXEdf6oId53q6uqCvg9AmDlzZrwPIemFu0Y2m0245ZZbhMGDBwvZ2dlCRkaG0K9fP+GXv/ylsGfPnngPP24UgsA+U0RERERERERywDnpRERERERERDLBIJ2IiIiIiIhIJhikExEREREREckEg3QiIiIiIiIimWCQTkRERERERCQTDNKJiIiIiIiIZIJBOhEREREREZFMMEgnIqKk8cILL0ChUGDHjh3xHgoWL14MhUKB+vr6eA8FADBr1iwMGDAg7HLt7e3429/+hosuugg9evSAVqtF//79cc0112D9+vVdP9A4GzBgABQKheh/FoulS/a5atUqvPDCC12ybSIiSjwZ8R4AERERycevfvUrvPnmm7jrrruwZMkSqNVqHDp0CP/85z/xwQcfoKqqKt5D7HJlZWV45JFHAl7XarVdsr9Vq1bBaDRi1qxZXbJ9IiJKLAzSiYiICABQV1eH119/HQsXLsSSJUs8r0+aNAm33norXC5XHEcXmiAIsNlsyMzM7PS2cnNzMWbMmBiMioiIKHJMdyciopRTXV2NSZMmIScnB1qtFmPHjsV7770nutyll14KjUaDvn37YsGCBXjuueegUChw+PDhTo/j1KlTmDNnDoYMGYLs7Gzk5+dj4sSJ2LZtm89yhw8fhkKhwCOPPILHHnsMRUVFyM7OxqWXXorPP/88YLsvvPACzj//fKjVagwePBgvvfSSpPE0NDQAAHr37i36flqa78+G/fv348orr4RWq4XRaMTvfvc7vPPOO1AoFPj44489yw0YMED0KfH48eMxfvx4z59tNhv+8Ic/YOTIkdDr9ejRowcuvfRSvPXWWwHrKhQKzJ07F3/9618xePBgqNVqvPjiiwCAAwcO4MYbb0R+fr7nHDzzzDOSzoEUP/74I37729+iX79+UKlUKCoqwpIlS+BwOHyWs9vtWLZsGQYNGgS1Wo2ePXvipptuwqlTpzzLDBgwAHv27MEnn3ziSauXMi2BiIiSF5+kExFRSvnkk08wefJkjBgxAqtXr4ZarcaqVaswbdo0rF27Fj//+c8BADt37sTkyZNx3nnn4cUXX4RWq8Vf//pXvPLKKzEby+nTpwEAixYtwjnnnAOLxYL169dj/Pjx2LRpk08ACwDPPPMMBg0ahMcffxwAsGDBAkyZMgV1dXXQ6/UAOgL0m266Cddccw0effRRmEwmLF68GG1tbQFBtr/BgwcjNzcXS5YsQVpaGi6//PKgAeOJEycwbtw4KJVKrFq1Cr169cKrr76KuXPnRn0+2tracPr0adxzzz3o27cv7HY7PvroI1x33XV4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d97B5s2bJW0nmKVLl+LDDz/E2LFjceedd+L888+HzWbD4cOHsXHjRvz1r39Fv379cMMNN+DVV1/FlClT8F//9V+4+OKLoVQq8Z///AdbtmzBNddcg6qqKgDA8OHD8fe//x2vv/46zj33XGg0GgwfPrxT4yQiogQW78p1REREseKu7h7sP3dF9m3btgkTJ04UsrKyhMzMTGHMmDHCO++8E7C9bdu2CZdccomgVquFc845R7j33nuFhx56SAAgNDU1hRyLu7p7sP8EQRDa2tqEe+65R+jbt6+g0WiEUaNGCRs2bBBmzpzpU4ndXd394YcfDtgPAGHRokU+rz333HNCSUmJoFKphPPOO09Ys2ZNwDbFNDY2CsuWLRMmTpwo9O3bV1CpVEJWVpYwcuRIYdmyZYLVavVZfu/evcLkyZMFjUYj9OjRQ7j55puFt956K6C6u8vlEv7yl78I5557rqDRaITRo0cLmzdvFq3uvnLlSmHAgAGCWq0WBg8eLPy///f/POfS/7hvv/120eOoq6sTZs+eLfTt21dQKpVCz549hbFjxwrLli0LefyC0FHd/eqrrw65zKlTp4Q777xTKCoqEpRKpdCjRw/hwgsvFO6//37BYrF4lmtvbxceeeQR4YILLhA0Go2QnZ0tDBo0SPjtb38rHDhwwLPc4cOHhcsvv1zIyckRAEiqwk9ERMlLIQiC0K13BYiIiBLY5ZdfjsOHD+O7776L91Bk6eOPP8aECROwZcuWgD7vREREFB7T3YmIiIK4++67UVpaioKCApw+fRqvvvoqPvzwQ6xevTreQyMiIqIkxSCdiIgoCKfTiYULF+LHH3+EQqHAkCFD8PLLL+OXv/xlvIdGRERESYrp7kREREREREQyIa00LRERERERERF1OQbpRERERERERDLBIJ2IiIiIiIhIJhikExEREREREckEg3QiIiIiIiIimWCQTkRERERERCQTDNKJiIiIiIiIZIJBOhEREREREZFMMEgnIiIiIiIikon/DwmneEOQMEJJAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1200x900 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Add any EDA code below\n",
    "training_val_data = pd.read_csv(\"cook_county_train_val.csv\", index_col='Unnamed: 0')\n",
    "\n",
    "data= training_val_data\n",
    "data['Log Building Square Feet'] = np.log(data['Building Square Feet'])\n",
    "data['Log Sale Price'] = np.log(data['Sale Price'])\n",
    "data = remove_outliers(data, 'Log Sale Price', lower =5, upper = 16)\n",
    "\n",
    "data = remove_outliers(data, 'Log Building Square Feet', lower =6, upper = 9)\n",
    "data = add_total_bedrooms(data)\n",
    "\n",
    "top_neighborhoods = data['Neighborhood Code'].value_counts().sort_values(ascending=False)\n",
    "data = data[data['Neighborhood Code'].isin(top_neighborhoods.head(20).index)]\n",
    "\n",
    "data['Log Land Square Feet'] = np.log(data['Land Square Feet'])\n",
    "\n",
    "#plot_categorical(neighborhoods=data)\n",
    "#sns.boxplot(data, x = 'Neighborhood Code', y ='Log Sale Price')\n",
    "\n",
    "#data = data.dropna(subset =['Garage 2 Size'])\n",
    "\n",
    "sns.scatterplot(data, x='Log Land Square Feet', y='Log Sale Price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_val_data = pd.read_csv(\"cook_county_train_val.csv\", index_col='Unnamed: 0')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 5c: Defining Helper Function or Helper Variables\n",
    "\n",
    "**This question is not graded, but we suggest that you put all your helper functions below for readability and ease of testing.** Use this space below to define any additional helper functions you may use in your final model. These can be transformation functions you identified in the optional question above. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define any additional helper functions or variables you need here\n",
    "def one_hot_encode(data):\n",
    "    \"\"\"\n",
    "    Return the one-hot encoded DataFrame of our input data.\n",
    "    \n",
    "    Parameters\n",
    "    -----------\n",
    "    data: A DataFrame that may include non-numerical features.\n",
    "    \n",
    "    Returns\n",
    "    -----------\n",
    "    A one-hot encoded DataFrame that only contains numeric features.\n",
    "    \n",
    "    \"\"\"\n",
    "    encoder= OneHotEncoder()\n",
    "    encoder.fit(data[['Garage 1 Size']])\n",
    "    encoded_apt= encoder.transform(data[['Garage 1 Size']]).toarray()\n",
    "    df= pd.DataFrame(encoded_apt, columns=encoder.get_feature_names_out())\n",
    "    data= data.join(df)\n",
    "    return data\n",
    "\n",
    "def plot_categorical(neighborhoods):\n",
    "    fig, axs = plt.subplots(nrows=2)\n",
    "\n",
    "    sns.boxplot(\n",
    "        x='Neighborhood Code',\n",
    "        y='Log Sale Price',\n",
    "        data=neighborhoods,\n",
    "        ax=axs[0],\n",
    "    )\n",
    "\n",
    "    sns.countplot(\n",
    "        x='Neighborhood Code',\n",
    "        data=neighborhoods,\n",
    "        ax=axs[1],\n",
    "    )\n",
    "\n",
    "    # Draw median price\n",
    "    axs[0].axhline(\n",
    "        y=data['Log Sale Price'].median(), \n",
    "        color='red',\n",
    "        linestyle='dotted'\n",
    "    )\n",
    "\n",
    "    # Label the bars with counts\n",
    "    for patch in axs[1].patches:\n",
    "        x = patch.get_bbox().get_points()[:, 0]\n",
    "        y = patch.get_bbox().get_points()[1, 1]\n",
    "        axs[1].annotate(f'{int(y)}', (x.mean(), y), ha='center', va='bottom')\n",
    "\n",
    "    # Format x-axes\n",
    "    axs[1].set_xticklabels(axs[1].xaxis.get_majorticklabels(), rotation=90)\n",
    "    axs[0].xaxis.set_visible(False)\n",
    "\n",
    "    # Narrow the gap between the plots\n",
    "    plt.subplots_adjust(hspace=0.01)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 5d: Defining The Pipeline Function\n",
    "\n",
    "Just as in the guided model from the previous question, you should encapsulate as much of your workflow into functions as possible. Your job is to select better features and define your own feature engineering pipeline inside the function `feature_engine_final` in the following cell. Use of `.pipe` is not required, but you are welcome to incorporate it! **You must not change the parameters inside `feature_engine_final`. Do not edit the two lines at the end of the question cell below. They are helper functions that define a linear model, fit your data, and compute RMSE. If you do, you will receive no credit for this question.** \n",
    "\n",
    "- Any feature engineering techniques that involve referencing `Sale Price` (for example, removing outlying `Sale Price` values from the training data) should be performed under the condition `if not is_test_set:`.\n",
    "- All other feature engineering techniques should be applied to both the training and test sets. This means that you should perform them under the condition `else:`.\n",
    "- When `is_test_set` is `True`, your function should return only the design matrix, `X`.\n",
    "- When `is_test_set` is `False`, your function should return both the design matrix and the response variable `Y` (the `Log Sale Price` column).\n",
    "\n",
    "**Hints:**\n",
    "-  Some features may have missing values in the test set but not in the training/validation set. Make sure `feature_engine_final` handles missing values appropriately for each feature.\n",
    "- We have imported all feature engineering functions from Project A1 for you. You do not have access to the `feature_func.py` file with the function body and definitions, but they work as defined in Project A1. Feel free to use them as you see fit!\n",
    "- You may wish to consider removing outlying datapoints from the training set before fitting your model. You may not, however, remove any datapoints from the test set (after all, the CCAO could not simply \"refuse\" to make predictions for a particular house!)\n",
    "- As you finetune your model, you may unintentionally consume too much Datahub memory, causing your kernel to crash. See `q5a` for guidance on how to resolve this!!\n",
    "\n",
    "**Note:** If you run into any errors, the [Proj. A2 Common Mistakes](https://ds100.org/debugging-guide/projA2/projA2.html) section of the [Data 100 Debugging Guide](https://ds100.org/debugging-guide) may be a helpful resource."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Current training RMSE: 247658.6808501917\n",
      "You can check your grade for your prediction as per the grading scheme outlined at the start of Question 5\n"
     ]
    }
   ],
   "source": [
    "# Please include all of your feature engineering processes inside this function.\n",
    "# Do not modify the parameters of this function.\n",
    "def feature_engine_final(data, is_test_set=False):\n",
    "    # Whenever you access 'Log Sale Price' or 'Sale Price', make sure to use the\n",
    "    # condition is_test_set like this:\n",
    "    if not is_test_set:\n",
    "        # Processing for the training set (i.e. not the test set)\n",
    "        # CAN involve references to sale price!\n",
    "        # CAN involve filtering certain rows or removing outliers\n",
    "        data['Log Sale Price'] = np.log(data['Sale Price'])\n",
    "        data = remove_outliers(data,'Log Sale Price',lower = 5, upper = 16)\n",
    "        data = data[(data['Building Square Feet']>= np.exp(6)) & (data['Building Square Feet']<= np.exp(9))]\n",
    "        top_neighborhoods = data['Neighborhood Code'].value_counts().sort_values(ascending=False)\n",
    "        data = data[data['Neighborhood Code'].isin(top_neighborhoods.head(20).index)]\n",
    "        \n",
    "    else:\n",
    "        # Processing for the test set\n",
    "        # CANNOT involve references to sale price!\n",
    "        # CANNOT involve removing any rows\n",
    "        ...\n",
    "        \n",
    "    # Processing for both test and training set\n",
    "    # CANNOT involve references to sale price!\n",
    "    # CANNOT involve removing any rows\n",
    "    # AKA do transformations HERE\n",
    "    data['Log Building Square Feet'] = np.log(data['Building Square Feet'])\n",
    "    data = add_total_bedrooms(data)\n",
    "\n",
    "    \n",
    "    \n",
    "    # Return predictors (X) and response (Y) variables separately\n",
    "    if is_test_set:\n",
    "        # Predictors pass in a dataframe; use loc or double brackets\n",
    "        X = data[['Neighborhood Code', 'Log Building Square Feet', 'Bedrooms']]\n",
    "        return X\n",
    "    else:\n",
    "        # Predictors. Your X should not include Log Sale Price!\n",
    "        X = data[['Neighborhood Code', 'Log Building Square Feet', 'Bedrooms']]\n",
    "        # Response variable\n",
    "        Y = data['Log Sale Price']\n",
    "        \n",
    "        return X, Y\n",
    "\n",
    "# DO NOT EDIT THESE TWO LINES!\n",
    "check_rmse_threshold = run_linear_regression_test_optim(lm.LinearRegression(fit_intercept=True), feature_engine_final, 'cook_county_train.csv', None, False)\n",
    "print(\"Current training RMSE:\", check_rmse_threshold.loss)\n",
    "print(\"You can check your grade for your prediction as per the grading scheme outlined at the start of Question 5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong style='color: red;'><pre style='display: inline;'>q5d</pre> results:</strong></p><p><strong><pre style='display: inline;'>q5d - 1</pre> result:</strong></p><pre>    ❌ Test case failed\n",
       "    Trying:\n",
       "        check_rmse_threshold(200000)\n",
       "    Expecting:\n",
       "        True\n",
       "    **********************************************************************\n",
       "    Line 1, in q5d 0\n",
       "    Failed example:\n",
       "        check_rmse_threshold(200000)\n",
       "    Expected:\n",
       "        True\n",
       "    Got:\n",
       "        False\n",
       "</pre><p><strong><pre style='display: inline;'>q5d - 2</pre> result:</strong></p><pre>    ❌ Test case failed\n",
       "    Trying:\n",
       "        check_rmse_threshold(240000)\n",
       "    Expecting:\n",
       "        True\n",
       "    **********************************************************************\n",
       "    Line 1, in q5d 1\n",
       "    Failed example:\n",
       "        check_rmse_threshold(240000)\n",
       "    Expected:\n",
       "        True\n",
       "    Got:\n",
       "        False\n",
       "</pre><p><strong><pre style='display: inline;'>q5d - 3</pre> result:</strong></p><pre>    ✅ Test case passed</pre><p><strong><pre style='display: inline;'>q5d - 4</pre> result:</strong></p><pre>    ✅ Test case passed</pre>"
      ],
      "text/plain": [
       "q5d results:\n",
       "    q5d - 1 result:\n",
       "        ❌ Test case failed\n",
       "        Trying:\n",
       "            check_rmse_threshold(200000)\n",
       "        Expecting:\n",
       "            True\n",
       "        **********************************************************************\n",
       "        Line 1, in q5d 0\n",
       "        Failed example:\n",
       "            check_rmse_threshold(200000)\n",
       "        Expected:\n",
       "            True\n",
       "        Got:\n",
       "            False\n",
       "\n",
       "    q5d - 2 result:\n",
       "        ❌ Test case failed\n",
       "        Trying:\n",
       "            check_rmse_threshold(240000)\n",
       "        Expecting:\n",
       "            True\n",
       "        **********************************************************************\n",
       "        Line 1, in q5d 1\n",
       "        Failed example:\n",
       "            check_rmse_threshold(240000)\n",
       "        Expected:\n",
       "            True\n",
       "        Got:\n",
       "            False\n",
       "\n",
       "    q5d - 3 result:\n",
       "        ✅ Test case passed\n",
       "\n",
       "    q5d - 4 result:\n",
       "        ✅ Test case passed"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"q5d\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 5e: Fit and Evaluate your Model\n",
    "\n",
    "**This question is not graded.** Use this space below to evaluate your models. Some ideas are listed below. \n",
    "\n",
    "**Note:** While we have a grader function that checks RMSE for you, it is best to define and create your own model object and fit on your data. This way, you have access to the model directly to help you evaluate/debug if needed. For this project, you should use a `sklearn` default `LinearRegression()` model with intercept term for grading purposes. Do not modify any hyperparameter in `LinearRegression()`, and focus on feature selection or hyperparameters of your own feature engineering function.\n",
    "\n",
    "It may also be helpful to calculate the RMSE directly as follows:\n",
    "\n",
    "$$RMSE = \\sqrt{\\dfrac{\\sum_{\\text{houses in the set}}(\\text{actual price for house} - \\text{predicted price for house})^2}{\\text{number of houses}}}$$\n",
    "\n",
    "A function that computes the RMSE is provided below. Feel free to use it if you would like calculate the RMSE for your training set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "def rmse(predicted, actual):\n",
    "    \"\"\"\n",
    "    Calculates RMSE from actual and predicted values.\n",
    "    Input:\n",
    "      predicted (1D array): Vector of predicted/fitted values\n",
    "      actual (1D array): Vector of actual values\n",
    "    Output:\n",
    "      A float, the RMSE value.\n",
    "    \"\"\"\n",
    "    return np.sqrt(np.mean((actual - predicted)**2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<details>\n",
    "    <summary>[<b>Click to Expand</b>] Hints: </summary>\n",
    "    \n",
    "Train set:\n",
    "\n",
    "* Check your RMSE. Is this a reasonable number? You may use our grading scheme as a reference. Keep in mind that training error is generally less than testing error. \n",
    "\n",
    "Test set:\n",
    "* Find the original data shape at the beginning of the notebook (in the provided assert statement). What should the output shape be?\n",
    "\n",
    "* Since test and training/validation sets come from the same population (recall that test and training/validation sets are a random split from larger data), we expect our test prediction to have a similar range as the validation data. Plot the observed training (Log) Sale Price and the predicted (Log) Sale Price. Are the ranges similar? Do you have any unreasonable extreme prediction that cannot be exponentiated?\n",
    "\n",
    "* We cannot compute test RMSE directly since we do not have the observed values. Perform cross-validation to estimate your test error. Recall that we are treating the validation set as unseen data.\n",
    "    \n",
    "</details>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Use this space to evaluate your model\n",
    "# if you reset your memory, you need to define the functions again"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 5f Submission\n",
    "\n",
    "Recall that the test set given to you in this assignment does not contain values for the true `Sale Price` of each house. You will be predicting `Log Sale Price` on the data stored in `cook_county_contest_test.csv`. To determine your model's RMSE on the test set, you will submit the predictions made by your model to Gradescope. There, we will run checks to see what your test RMSE is by considering (hidden) true values for the `Sale Price`. We will delog/exponentiate your prediction on Gradescope to compute RMSE and use this to score your model. Before submitting to Gradescope, make sure that your predicted values can all be delogged (i.e., if one of your `Log Sale Price` predictions is 60, it is too large; $e^{60}$ is too big!)\n",
    "\n",
    "Your score on this section will be determined by the grading scheme outlined at the start of Question 5. **Remember that you can only submit your test set predictions to Gradescope up to 4 times per day. Plan your time to ensure that you can adjust your model as necessary, and please test your model's performance using cross-validation before making any submissions.** For more on cross-validation, check [Lecture 16](https://ds100.org/sp24/lecture/lec16/). In particular, the [Lecture 16 notebook](https://data100.datahub.berkeley.edu/hub/user-redirect/git-pull?repo=https%3A%2F%2Fgithub.com%2FDS-100%2Fsp24-student&urlpath=lab%2Ftree%2Fsp24-student%2F%2Flecture%2Flec16%2Flec16.ipynb&branch=main) may be helpful here. You can also feel free to reference what you did in previous questions when creating training and validation sets and seeing how your model performs.\n",
    "\n",
    "To determine the error on the test set, please submit your predictions on the test set to the Gradescope assignment **Project A2 Test Set Predictions**. The CSV file to submit is generated below, and you should not modify the cell below. Simply download the CSV file, and submit it to the appropriate Gradescope assignment.\n",
    "\n",
    "**You will not receive credit for the test set predictions (i.e., up to 3 points) unless you submit to this assignment**!!\n",
    "\n",
    "**Note:** If you run into any errors, the [Proj. A2 Common Mistakes](https://ds100.org/debugging-guide/projA2/projA2.html) section of the [Data 100 Debugging Guide](https://ds100.org/debugging-guide) may be a helpful resource."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## from datetime import datetime\n",
    "from IPython.display import display, HTML\n",
    "\n",
    "Y_test_pred = run_linear_regression_test(lm.LinearRegression(fit_intercept=True), feature_engine_final, None, 'cook_county_train.csv', 'cook_county_contest_test.csv', \n",
    "                                         is_test = True, is_ranking = False, return_predictions = True\n",
    "                                         )\n",
    "\n",
    "# Construct and save the submission:\n",
    "submission_df = pd.DataFrame({\n",
    "    \"Id\": pd.read_csv('cook_county_contest_test.csv')['Unnamed: 0'], \n",
    "    \"Value\": Y_test_pred,\n",
    "}, columns=['Id', 'Value'])\n",
    "timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n",
    "filename = \"submission_{}.csv\".format(timestamp)\n",
    "submission_df.to_csv(filename, index=False)\n",
    "\n",
    "#print('Created a CSV file: {}.'.format(\"submission_{}.csv\".format(timestamp)))\n",
    "display(HTML(\"Download your test prediction <a href='\" + filename + \"' download>here</a>.\"))\n",
    "print('You may now upload this CSV file to Gradescope for scoring.')#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'submission_df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[77], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Scratch space to check if your prediction is reasonable. See 5e for hints. \u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;66;03m# We will not reset the submission count for mis-submission issues.\u001b[39;00m\n\u001b[0;32m----> 3\u001b[0m \u001b[43msubmission_df\u001b[49m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mValue\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m.\u001b[39mdescribe()\n",
      "\u001b[0;31mNameError\u001b[0m: name 'submission_df' is not defined"
     ]
    }
   ],
   "source": [
    "# Scratch space to check if your prediction is reasonable. See 5e for hints. \n",
    "# We will not reset the submission count for mis-submission issues.\n",
    "submission_df[\"Value\"].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Congratulations on finishing your prediction model for home sale prices in Cook County! In the following section, we'll delve deeper into the implications of predictive modeling within the CCAO case study, especially because statistical modeling is how the CCAO valuates properties. \n",
    "\n",
    "Refer to [Lecture 15](https://ds100.org/sp24/lecture/lec15/) if you're having trouble getting started!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Question 6: Exploring RMSE\n",
    "\n",
    "Let's delve a bit deeper into what RMSE means in the context of predicting house prices. We will go through different ways of visualizing the performance of the model you created and see how that ties into questions about property taxes. To this end, we'll create the `preds_df` `DataFrame` below that will prove useful for the later questions.\n",
    "\n",
    "<br>\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run the cell below; no further action is needed\n",
    "train_df = pd.read_csv('cook_county_train.csv')\n",
    "X, Y_true = feature_engine_final(train_df)\n",
    "model = lm.LinearRegression(fit_intercept=True)\n",
    "model.fit(X, Y_true)\n",
    "Y_pred = model.predict(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "preds_df = pd.DataFrame({'True Log Sale Price' : Y_true, 'Predicted Log Sale Price' : Y_pred, \n",
    "                         'True Sale Price' : np.e**Y_true, 'Predicted Sale Price' : np.e**Y_pred})\n",
    "preds_df.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "### Question 6a"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "Let's examine how our model performs on two halves of our data: `cheap_df` which contains the rows of `preds_df` with prices below or equal to the median sale price, and `expensive_df` which has rows of `preds_df` with true sale prices above the median. Take a moment to understand what is happening in the cell below, as it will also prove useful in `q6b`.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Run the cell below to obtain the two subsets of data; no further action is needed.\n",
    "min_Y_true, max_Y_true = np.round(np.min(Y_true), 1) , np.round(np.max(Y_true), 1)\n",
    "median_Y_true = np.round(np.median(Y_true), 1)\n",
    "cheap_df = preds_df[(preds_df['True Log Sale Price'] >= min_Y_true) & (preds_df['True Log Sale Price'] <= median_Y_true)]\n",
    "expensive_df = preds_df[(preds_df['True Log Sale Price'] > median_Y_true) & (preds_df['True Log Sale Price'] <= max_Y_true)]\n",
    "\n",
    "print(f'\\nThe lower interval contains houses with true sale price ${np.round(np.e**min_Y_true)} to ${np.round(np.e**median_Y_true)}')\n",
    "print(f'The higher interval contains houses with true sale price ${np.round(np.e**median_Y_true)} to ${np.round(np.e**max_Y_true)}\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "**Compute the RMSE of your model's predictions of `Sale Price` on each subset separately**, and assign those values to `rmse_cheap` and `rmse_expensive` respectively.\n",
    "\n",
    "Separately, we also want to understand whether the proportion of houses in each interval that the model overestimates the value of the actual `Sale Price`. To that end, **compute the proportion of predictions strictly greater than the corresponding true price in each subset**, and assign it to `prop_overest_cheap` and `prop_overest_expensive` respectively. For example, if we were working with a dataset of 3 houses where the actual `Log Sale Price`s were [10, 11, 12] and the model predictions were [5, 15, 13], then the proportion of houses with overestimated values would be 2/3.\n",
    "\n",
    "**Note:** When calculating `prop_overest_cheap` and `prop_overest_expensive`, you could use either `Log Sale Price` or `Sale Price`. Take a second to think through why this metric is unchanged under a log transformation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "rmse_cheap = rmse(cheap_df['True Sale Price'], cheap_df['Predicted Sale Price'])\n",
    "rmse_expensive = rmse(expensive_df['True Sale Price'], expensive_df['Predicted Sale Price'])\n",
    "\n",
    "prop_overest_cheap = (cheap_df['Predicted Sale Price']> cheap_df['True Sale Price']).mean()\n",
    "prop_overest_expensive = (expensive_df['Predicted Sale Price']< expensive_df['True Sale Price']).mean()\n",
    "\n",
    "print(f\"The RMSE for properties with log sale prices in the interval {(min_Y_true, median_Y_true)} is {np.round(rmse_cheap)}\")\n",
    "print(f\"The RMSE for properties with log sale prices in the interval {(median_Y_true, max_Y_true)} is {np.round(rmse_expensive)}\\n\")\n",
    "print(f\"The percentage of overestimated values for properties with log sale prices in the interval {(min_Y_true, median_Y_true)} is {np.round(100 * prop_overest_cheap, 2)}%\")\n",
    "print(f\"The percentage of overestimated values for properties with log sale prices in the interval {(median_Y_true, max_Y_true)} is {np.round(100 * prop_overest_expensive, 2)}%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "grader.check(\"q6a\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<br>\n",
    "\n",
    "---\n",
    "### Question 6b\n",
    "\n",
    "The intervals we defined above were rather broad. Let's try and take a more fine-grained approach to understand how RMSE and proportion of houses overestimated vary across different intervals of `Log Sale Price`. Complete the functions `rmse_interval` and `prop_overest_interval` to allow us to compute the appropriate values for any given interval. Pay close attention to the function description, and feel free to reuse and modify the code you wrote in the previous part as needed.\n",
    "\n",
    "**Note:** The autograder tests provided for each of the functions are **not** comprehensive as the outputs of the function are highly dependent on your model. Make sure that the values you obtain are interpretable and that the plots that follow look right."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def rmse_interval(df, start, end):\n",
    "    '''\n",
    "    Given a design matrix X and response vector Y, computes the RMSE for a subset of values \n",
    "    wherein the corresponding Log Sale Price lies in the interval [start, end].\n",
    "\n",
    "    Input: \n",
    "    df : pandas DataFrame with columns 'True Log Sale Price', \n",
    "        'Predicted Log Sale Price', 'True Sale Price', 'Predicted Sale Price'\n",
    "    start : A float specifying the start of the interval (inclusive)\n",
    "    end : A float specifying the end of the interval (inclusive)\n",
    "    '''\n",
    "\n",
    "    subset_df = df[(df['True Log Sale Price']>= start) & (df['True Log Sale Price']<= end) ]\n",
    "    rmse_subset = rmse(subset_df['True Sale Price'], subset_df['Predicted Sale Price'])\n",
    "    return rmse_subset\n",
    "    \n",
    "def prop_overest_interval(df, start, end):\n",
    "    '''\n",
    "    Given a DataFrame df, computes prop_overest for a subset of values \n",
    "    wherein the corresponding Log Sale Price lies in the interval [start, end].\n",
    "\n",
    "    Input: \n",
    "    df : pandas DataFrame with columns 'True Log Sale Price', \n",
    "        'Predicted Log Sale Price', 'True Sale Price', 'Predicted Sale Price'\n",
    "    start : A float specifying the start of the interval (inclusive)\n",
    "    end : A float specifying the end of the interval (inclusive)\n",
    "    '''\n",
    "    \n",
    "    subset_df = df[(df['True Log Sale Price']>= start) & (df['True Log Sale Price']<= end) ]\n",
    "\n",
    "    # DO NOT MODIFY THESE TWO LINES\n",
    "    if subset_df.shape[0] == 0:\n",
    "        return -1\n",
    "\n",
    "    prop_subset = (subset_df['Predicted Sale Price']>subset_df['True Sale Price']).mean()\n",
    "    return prop_subset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "grader.check(\"q6b\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "---\n",
    "### Question 6c"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "Now that you've defined these functions, let's put them to use and generate some interesting visualizations of how the RMSE and proportion of overestimated houses vary for different intervals."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# RMSE plot\n",
    "plt.figure(figsize = (8,5))\n",
    "plt.subplot(1, 2, 1) \n",
    "rmses = []\n",
    "for i in np.arange(8, 14, 0.5):\n",
    "    rmses.append(rmse_interval(preds_df, i, i + 0.5))\n",
    "plt.bar(x = np.arange(8.25, 14.25, 0.5), height = rmses, edgecolor = 'black', width = 0.5)\n",
    "plt.title('RMSE Over Different Intervals\\n of Log Sale Price', fontsize = 10)\n",
    "plt.xlabel('Log Sale Price')\n",
    "plt.yticks(fontsize = 10)\n",
    "plt.xticks(fontsize = 10)\n",
    "plt.ylabel('RMSE')\n",
    "\n",
    "# Overestimation plot  \n",
    "plt.subplot(1, 2, 2)\n",
    "props = []\n",
    "for i in np.arange(8, 14, 0.5):\n",
    "    props.append(prop_overest_interval(preds_df, i, i + 0.5) * 100) \n",
    "plt.bar(x = np.arange(8.25, 14.25, 0.5), height = props, edgecolor = 'black', width = 0.5)\n",
    "plt.title('Percentage of House Values Overestimated \\nover different intervals of Log Sale Price', fontsize = 10)\n",
    "plt.xlabel('Log Sale Price')\n",
    "plt.yticks(fontsize = 10)\n",
    "plt.xticks(fontsize = 10)\n",
    "plt.ylabel('Percentage of House Values\\n that were Overestimated (%)')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "Explicitly referencing **ONE** of the plots above (using `props` and `rmses`), explain whether the assessments your model predicts more closely aligns with scenario C or scenario D that we discussed back in `q1b`. Which of the two plots would be more useful in ascertaining whether the assessments tended to result in progressive or regressive taxation? Provide a brief explanation to support your choice of plot. For your reference, the scenarios are also shown below:\n",
    "\n",
    "    C. An assessment process that systematically overvalues inexpensive properties and undervalues expensive properties.  \n",
    "    D. An assessment process that systematically undervalues inexpensive properties and overvalues expensive properties."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on the second plot using proportions, my model was regressive and more closely aligns with scenario D. -- which is the scenario that I found least \"fair\" if I had to choose. The second plot is more useful in demonstrating that my model yielded regressive predictions for the system of taxation. The trend in the proportions plot of overvalued houses shows a much higher proportion of inexpensive properties were overvalued, while the pricier homes saw lower overestimation in valuation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Question 7: Evaluating the Model in Context\n",
    "\n",
    "<br>\n",
    "\n",
    "---\n",
    "## Question 7a\n",
    "\n",
    "When evaluating your model, we used RMSE. In the context of estimating the value of houses, what does the residual mean for an individual homeowner? How does it affect them in terms of property taxes? Discuss the cases where the residual is positive and negative separately."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The residuals show us important information, particularly if the errors are clustered in a certain pattern and whether a model is making overestimations or underestimations of houses. This can gravely impact some homeowners, as they might see a disproportionate increase in their taxes; thus, some low-income families may end up losing their homes. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "In the case of the Cook County Assessor’s Office, Chief Data Officer Rob Ross states that fair property tax rates are contingent on whether property values are assessed accurately —— that they’re valued at what they’re worth, relative to properties with similar characteristics. This implies that having a more accurate model results in fairer assessments. The goal of the property assessment process for the CCAO, then, is to be as accurate as possible. \n",
    "\n",
    "When the use of algorithms and statistical modeling has real-world consequences, we often refer to the idea of fairness as a measurement of how socially responsible our work is. Fairness is incredibly multifaceted: Is a fair model one that minimizes loss - one that generates accurate results? Is it one that utilizes \"unbiased\" data? Or is fairness a broader goal that takes historical contexts into account?\n",
    "\n",
    "These approaches to fairness are not mutually exclusive. If we look beyond error functions and technical measures of accuracy, we'd not only consider _individual_ cases of fairness but also what fairness —— and justice —— means to marginalized communities on a broader scale. We'd ask: What does it mean when homes in predominantly Black and Hispanic communities in Cook County are consistently overvalued, resulting in proportionally higher property taxes? When the white neighborhoods in Cook County are consistently undervalued, resulting in proportionally lower property taxes? \n",
    "\n",
    "Having \"accurate\" predictions doesn't necessarily address larger historical trends and inequities, and fairness in property assessments in taxes works beyond the CCAO's valuation model. Disassociating accurate predictions from a fair system is vital to approaching justice at multiple levels. Take Evanston, IL —— a suburb in Cook County —— as an example of housing equity beyond just improving a property valuation model: their City Council members [recently approved reparations for African American residents](https://www.usnews.com/news/health-news/articles/2021-03-23/chicago-suburb-approves-government-reparations-for-black-residents).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- BEGIN QUESTION -->\n",
    "\n",
    "<br>\n",
    "\n",
    "---\n",
    "\n",
    "## Question 7b\n",
    "\n",
    "Reflecting back on your exploration in Questions 6 and 7a, in your own words, what makes a model's predictions of property values for tax assessment purposes \"fair\"? \n",
    "\n",
    "This question is open-ended and part of your answer may depend on your specific model; we are looking for thoughtfulness and engagement with the material, not correctness. \n",
    "\n",
    "**Hint:** Some guiding questions to reflect on as you answer the question above: What is the relationship between RMSE, accuracy, and fairness as you have defined it? Is a model with a low RMSE necessarily accurate? Is a model with a low RMSE necessarily \"fair\"? Is there any difference between your answers to the previous two questions? And if so, why?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Fairness is about sticking to some gold-standard, widely used metric, like the coefficient of dispersion, to best evaluate a model's prediction. Unfortunately, the job of a data science sometimes comes down to picking the winners and losers because of the human impact from the work that your data does. Understanding these human contexts and ethics is key to making a system fairer, and by taking into consideration the backgrounds of the communities that are impacted by your work can lead to results that produce the least amount of harm possible. A low RMSE is simply not enough to determine whether a model is fair. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "<!-- END QUESTION -->\n",
    "\n",
    "<br/>\n",
    "<hr style=\"border: 5px solid #003262;\" />\n",
    "<hr style=\"border: 1px solid #fdb515;\" />\n",
    "\n",
    "## Ayga and Beck congratulate you on finishing Project A2!\n",
    "\n",
    "<center><video controls src = \"aygabeck.mp4\" width = \"250\">animation</video></a></center>\n",
    "\n",
    "### Course Content Feedback\n",
    "\n",
    "If you have any feedback about this assignment or about any of our other weekly, weekly assignments, lectures, or discussions, please fill out the [Course Content Feedback Form](https://docs.google.com/forms/d/e/1FAIpQLSe0fBEJwt6aEfZxU3fh3llNk8rSWHj6Umq0km3wPqmFu0MlGA/viewform). Your input is valuable in helping us improve the quality and relevance of our content to better meet your needs and expectations!\n",
    "\n",
    "### Submission Instructions\n",
    "\n",
    "Below, you will see a cell. Running this cell will automatically generate a zip file with your autograded answers. Once you submit this file to the Project A2 Coding assignment on Gradescope, Gradescope will automatically submit a PDF file with your written answers to the Project A2 Written assignment. If you run into any issues when running this cell, feel free to check this [section](https://ds100.org/debugging-guide/autograder_gradescope/autograder_gradescope.html#why-does-grader.exportrun_teststrue-fail-if-all-previous-tests-passed) in the Data 100 Debugging Guide.\n",
    "\n",
    "If there are issues with automatically generating the PDF, you can try downloading the notebook as a PDF by clicking on `File -> Save and Export Notebook As... -> PDF`. If that doesn't work either, you can manually take screenshots of your answers to the manually graded questions and submit those. \n",
    "\n",
    "**Please make sure you submit the following to the right assignments:**\n",
    "\n",
    "* **Project A2 Coding:** Submit the zip file generated by using the `grader.export()` cell provided below.\n",
    "* **Project A2 Written:** Gradescope will automatically submit the PDF from the zip file submitted earlier. You do not need to submit anything to this assignment yourself, but *please check that the submission went through properly and that all plots rendered correctly*.\n",
    "* **Project A2 Test Set Predictions:** Submit the CSV file generated in `q5f`.\n",
    "\n",
    "**You are responsible for ensuring your submission follows our requirements and that everything was generated and submitted correctly. We will not be granting regrade requests nor extensions to submissions that don't follow instructions.** If you encounter any difficulties with submission, please don't hesitate to reach out to staff prior to the deadline. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Submission\n",
    "\n",
    "Make sure you have run all cells in your notebook in order before running the cell below, so that all images/graphs appear in the output. The cell below will generate a zip file for you to submit. **Please save before exporting!**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Save your notebook first, then run this cell to export your submission.\n",
    "grader.export(run_tests=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Create Assignment",
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.0"
  },
  "otter": {
   "OK_FORMAT": true,
   "require_no_pdf_confirmation": true,
   "tests": {
    "q1c": {
     "name": "q1c",
     "points": 1,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> q1c.lower() in ['a', 'b', 'c']\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q2": {
     "name": "q2",
     "points": 2,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> train.shape == (163833, 62)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> validation.shape == (40959, 62)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> np.isclose(train['Sale Price'].mean(), 244939.22668204817, atol=0.1)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> np.allclose(validation.index[-5:], [153946, 117415, 9448, 188605, 3223])\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> np.isclose(validation['Sale Price'].mean(), 246066.1821089382, atol=0.1)\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q3a": {
     "name": "q3a",
     "points": 2,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> (q3a in ['>=', '=', '<=']) == True\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> q3a == '>='\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q3b": {
     "name": "q3b",
     "points": 3,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> isinstance(X_train_m1, pd.core.frame.DataFrame) and isinstance(Y_train_m1, pd.core.series.Series) and isinstance(X_valid_m1, pd.core.frame.DataFrame) and isinstance(Y_valid_m1, pd.core.series.Series) and isinstance(X_train_m2, pd.core.frame.DataFrame) and isinstance(Y_train_m2, pd.core.series.Series) and isinstance(X_valid_m2, pd.core.frame.DataFrame) and isinstance(Y_valid_m2, pd.core.series.Series)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> assert len(m2_pipelines) == 5\n>>> assert log_transform in set([p[0] for p in m2_pipelines])\n",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q3c": {
     "name": "q3c",
     "points": 2,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> np.isclose(Y_fitted_m1.max(), 17.528601849438104, atol=0.0001) == True\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> np.isclose(Y_fitted_m2.max(), 15.614096224439168, atol=0.0001) == True\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> np.isclose(Y_predicted_m1.max(), 15.540922864181525, atol=0.0001) == True\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> np.isclose(Y_predicted_m2.max(), 15.02563963305767, atol=0.0001) == True\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q4b": {
     "name": "q4b",
     "points": 1,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> q4b.lower() in ['regressive', 'fair', 'progressive']\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q5d": {
     "name": "q5d",
     "points": 3,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> check_rmse_threshold(200000)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> check_rmse_threshold(240000)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> check_rmse_threshold(280000)\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> check_rmse_threshold.signature == (feature_engine_final, 'cook_county_train.csv', None)\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q6a": {
     "name": "q6a",
     "points": 1,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> rmse_cheap >= 0\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> rmse_expensive >= 0\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> 0 <= prop_overest_cheap <= 1\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> 0 <= prop_overest_expensive <= 1\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    },
    "q6b": {
     "name": "q6b",
     "points": 2,
     "suites": [
      {
       "cases": [
        {
         "code": ">>> prop_overest_interval(preds_df, 10, 14) >= 0 and prop_overest_interval(preds_df, 10, 14) <= 1\nTrue",
         "hidden": false,
         "locked": false
        },
        {
         "code": ">>> rmse_interval(preds_df, 10, 14) < 1000000000.0 and rmse_interval(preds_df, 10, 14) > 0\nTrue",
         "hidden": false,
         "locked": false
        }
       ],
       "scored": true,
       "setup": "",
       "teardown": "",
       "type": "doctest"
      }
     ]
    }
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
